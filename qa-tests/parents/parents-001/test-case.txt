QA Test Case: Parent Subscription Page First Load

Test ID: PARENTS-001
Test Name: Parent Subscription Page Load and Content Verification  
Purpose: Verify that the parent subscription page loads at /parents route and displays subscription options correctly for parents
Expected Result: Parents page loads at /parents URL, displays both subscription options with correct content, and provides clear navigation to auth

=== CONTEXT (Pre-test Requirements) ===

System Information:
- Project: Aprende Comigo - Educational platform  
- Architecture: Django REST backend + React Native frontend with Expo Router
- Recent Changes: Parent subscription page implemented at /parents route (Issue #12)
- Parent Page Location: frontend-ui/app/parents/index.tsx

Required Environment Setup:
1. Project Location: /Users/anapmc/Code/aprendecomigo/
2. Python Virtual Environment: .venv/ in project root  
3. Environment Variables:
   - DJANGO_ENV=development
   - EXPO_PUBLIC_ENV=development
4. Backend Server: Django running on http://localhost:8000
5. Frontend Server: Expo dev server on http://localhost:8081

Test Data:
- No specific test data required (public landing page)
- No authentication required for this test
- Should work for anonymous users

Prerequisites:
- Both backend and frontend servers must be running
- Clear browser cache/storage to simulate new user experience  
- No existing authentication tokens should be present

=== DETAILED STEP-BY-STEP INSTRUCTIONS ===

Step 1: Environment Setup
1. Navigate to project directory
Commands:
  cd /Users/anapmc/Code/aprendecomigo
  source .venv/bin/activate
  cd backend

2. Start Django backend server
Commands:  
  python manage.py runserver
  # Verify server starts on http://localhost:8000

3. Open new terminal and start frontend
Commands:
  cd /Users/anapmc/Code/aprendecomigo/frontend-ui
  npm start
  # Verify Expo dev server starts on http://localhost:8081

Expected: Both servers start successfully without errors
Screenshot: 01_servers_running.png

Step 2: Clear Browser State (Simulate New User)
1. Open browser developer tools
2. Clear all cookies, local storage, session storage
3. Or use incognito/private browsing mode  

Expected: Clean browser state with no cached authentication
Screenshot: 02_browser_cleared.png

Step 3: Navigate to Parent Subscription Page
1. Navigate to http://localhost:8081/parents in browser
2. Wait for parent subscription page to fully load (may take 10-15 seconds initially)
3. Verify the page loads with subscription options

Expected: Parent subscription page loads at /parents URL with subscription content
Screenshot: 03_parents_page_loaded.png

Step 4: Parent Page Header Verification
1. Verify page title displays "Aprende Comigo"
2. Verify subtitle text: "Premium tutoring hours for quality education"
3. Check that header is centered and visually prominent

Expected: Header displays correct branding and messaging
Screenshot: 04_header_content.png

Step 5: Monthly Subscription Card Verification
1. Locate the "Monthly Subscription" card
2. Verify card displays:
   - Clock icon in primary color
   - Title: "Monthly Subscription"  
   - Description: "5 hours per month of premium tutoring"
   - Three feature bullets with checkmarks:
     * "Recurring monthly access"
     * "Best value for regular learners"  
     * "Cancel anytime"
   - "Choose Monthly Plan" button with credit card icon

Expected: Monthly subscription card displays all elements correctly
Screenshot: 05_monthly_subscription_card.png

Step 6: One-time Package Card Verification
1. Locate the "One-time Package" card  
2. Verify card displays:
   - Users icon in secondary color
   - Title: "One-time Package"
   - Description: "10 hours usable within 3 months"
   - Three feature bullets with checkmarks:
     * "Flexible scheduling"
     * "No recurring charges"
     * "3-month validity"
   - "Buy One-time Package" button with credit card icon

Expected: One-time package card displays all elements correctly  
Screenshot: 06_onetime_package_card.png

Step 7: Authentication Links Verification
1. Scroll to bottom of page
2. Verify text: "Already have an account or want to create one?"
3. Verify two links are present:
   - "Sign In" link
   - "Sign Up" link  
4. Verify links are separated by a bullet point "â€¢"

Expected: Authentication links display correctly at bottom
Screenshot: 07_auth_links.png

Step 8: Visual Design and Responsiveness
1. Test page at different screen widths (desktop, tablet, mobile)
2. Verify cards remain readable and properly spaced
3. Check that all text is legible and properly sized
4. Verify consistent spacing and alignment

Expected: Page displays properly across different screen sizes
Screenshot: 08_responsive_design.png

Step 9: Button Interaction Test (UI Only)
1. Hover over "Choose Monthly Plan" button
2. Hover over "Buy One-time Package" button  
3. Verify buttons show appropriate hover states
4. Click each button and verify console logs show product selection
   (Actual Stripe integration will be tested in separate test case)

Expected: Buttons show visual feedback and log interactions
Screenshot: 09_button_interactions.png

Step 10: Performance and Load Time
1. Refresh the page and measure load time
2. Check browser console for any errors
3. Verify no broken images or missing assets
4. Check that all icons load properly (Clock, Users, CheckCircle2, CreditCard)

Expected: Page loads quickly (< 3 seconds) with no errors
Screenshot: 10_performance_check.png

=== PASS/FAIL CRITERIA ===

PASS: All steps complete successfully AND:
- Landing page loads as the first screen when accessing the app
- Both subscription cards display with correct content and styling
- All required text, icons, and buttons are present and functional
- Authentication links are present and properly formatted
- Page is responsive and performs well
- No console errors or broken elements

FAIL: Any step fails OR:
- App redirects to signin page instead of landing page
- Subscription cards are missing or display incorrectly  
- Required content (text, buttons, links) is missing
- Layout is broken or unresponsive
- Console shows errors during load
- Performance is poor (>5 seconds load time)

Individual Step Criteria:
- Step 1: PASS if both servers start without errors, FAIL if either server fails to start
- Step 2: PASS if browser state is cleared, FAIL if cached auth interferes with test
- Step 3: PASS if landing page loads first, FAIL if redirects to signin or shows loading indefinitely  
- Step 4: PASS if header content matches exactly, FAIL if text is incorrect or missing
- Step 5: PASS if monthly card has all required elements, FAIL if any content is missing
- Step 6: PASS if one-time card has all required elements, FAIL if any content is missing
- Step 7: PASS if auth links are present and formatted correctly, FAIL if links missing or broken
- Step 8: PASS if responsive across screen sizes, FAIL if layout breaks on any size
- Step 9: PASS if buttons show hover states and log interactions, FAIL if buttons unresponsive
- Step 10: PASS if loads quickly with no errors, FAIL if slow or shows console errors

Overall Result: PASS only if ALL steps pass, FAIL if ANY step fails

=== UX/BEHAVIORAL REQUIREMENTS ===
- Landing page should be the absolute first thing users see
- Subscription options should be visually appealing and easy to understand
- Navigation to auth should be clear but not overshadow subscription options
- Page should load quickly to avoid user drop-off  
- Content should be accessible and work without JavaScript if needed
- Mobile experience should be as good as desktop experience