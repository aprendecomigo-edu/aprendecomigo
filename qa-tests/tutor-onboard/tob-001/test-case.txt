QA Test Case: Educational System Selection

Test ID: TOB-001
Test Name: Educational System Selection Functionality
Purpose: Verify that individual tutors can select from Portugal, Brazil, and Custom educational systems with clear descriptions
Expected Result: Educational system selection interface displays options clearly and allows proper selection

=== CONTEXT (Pre-test Requirements) ===

System Information:
- Project: Aprende Comigo Platform
- Architecture: Django REST backend + React Native frontend
- Feature: Individual Tutor Onboarding Flow (GitHub Issue #44)

Required Environment Setup:
1. Project Location: /Users/anapmc/Code/aprendecomigo
2. Python Virtual Environment: .venv/ in project root
3. Development servers running: `make dev`
4. Backend API endpoints accessible
5. Frontend accessible at http://localhost:8081

Test Data:
- No specific test data required for this test
- Should test with fresh user account
- Educational systems should be populated via Django migrations

=== DETAILED STEP-BY-STEP INSTRUCTIONS ===

Step 1: Environment Setup and Server Start
Commands:
  cd /Users/anapmc/Code/aprendecomigo
  make dev

Expected: Both backend and frontend servers start successfully
Screenshot: 01_servers_running.png
Debug: Use 'make logs' to view server logs if issues occur

Step 2: Navigate to Individual Tutor Onboarding
1. Open browser to http://localhost:8081
2. Navigate to individual tutor onboarding flow
3. Access the educational system selection step

Expected: Educational system selection interface loads
Screenshot: 02_educational_system_interface.png

Step 3: Verify Educational System Options Display
1. Examine the educational system options presented
2. Verify Portugal system is available with clear description
3. Verify Brazil system is available with clear description
4. Verify Custom system is available with clear description

Expected: Three educational systems displayed with descriptions:
- Portugal: Portuguese educational system with appropriate description
- Brazil: Brazilian educational system with appropriate description  
- Custom: Custom/Other educational system with appropriate description

Screenshot: 03_system_options_displayed.png

Step 4: Test Portugal Educational System Selection
1. Click/tap on Portugal educational system option
2. Verify selection is visually indicated (highlighting, selection state)
3. Verify description is clearly readable and informative

Expected: Portugal system selected, visual feedback provided, description visible
Screenshot: 04_portugal_selected.png

Step 5: Test Brazil Educational System Selection
1. Click/tap on Brazil educational system option
2. Verify selection changes from Portugal to Brazil
3. Verify selection is visually indicated
4. Verify description changes appropriately

Expected: Brazil system selected, visual feedback provided, appropriate description
Screenshot: 05_brazil_selected.png

Step 6: Test Custom Educational System Selection
1. Click/tap on Custom educational system option
2. Verify selection changes to Custom
3. Verify selection is visually indicated
4. Verify description explains custom option purpose

Expected: Custom system selected, visual feedback provided, helpful description
Screenshot: 06_custom_selected.png

Step 7: Test System Descriptions Content Quality
1. Read each educational system description carefully
2. Verify descriptions are informative and helpful
3. Verify descriptions explain what each system covers
4. Check for grammar, spelling, and clarity

Expected: All descriptions are clear, informative, and error-free
Screenshot: 07_descriptions_quality.png

Step 8: Test Continue Button Functionality
1. Select an educational system (e.g., Portugal)
2. Verify continue/next button becomes enabled
3. Click continue button
4. Verify progression to next step occurs

Expected: Button enables after selection, clicking advances to course selection
Screenshot: 08_continue_functionality.png

Step 9: Test Selection Persistence
1. Navigate back to educational system selection (if possible)
2. Verify previously selected system is still selected
3. Change selection to different system
4. Verify selection persists during session

Expected: Selections persist and are maintained correctly
Screenshot: 09_selection_persistence.png

Step 10: Test Mobile/Responsive Behavior
1. Resize browser window to mobile dimensions (375px width)
2. Verify educational system options remain accessible
3. Verify descriptions are readable on small screens
4. Test touch/tap interactions

Expected: Interface remains functional and readable on mobile
Screenshot: 10_mobile_responsive.png

=== PASS/FAIL CRITERIA ===

PASS: All educational systems (Portugal, Brazil, Custom) are displayed with clear, informative descriptions, selection works correctly, visual feedback is provided, and interface is responsive

FAIL: Any educational system missing, descriptions unclear/missing, selection not working, no visual feedback, or interface not responsive

Individual Step Criteria:
- Step 1: PASS if servers start successfully, FAIL if servers don't start
- Step 2: PASS if onboarding interface loads, FAIL if interface doesn't load
- Step 3: PASS if all three systems displayed with descriptions, FAIL if any missing
- Step 4: PASS if Portugal selection works with visual feedback, FAIL otherwise
- Step 5: PASS if Brazil selection works with visual feedback, FAIL otherwise
- Step 6: PASS if Custom selection works with visual feedback, FAIL otherwise
- Step 7: PASS if all descriptions are clear and informative, FAIL if poor quality
- Step 8: PASS if continue button works and advances flow, FAIL otherwise
- Step 9: PASS if selections persist correctly, FAIL if lost
- Step 10: PASS if mobile interface works well, FAIL if broken

Overall Result: PASS only if ALL steps pass, FAIL if ANY step fails