QA Test Case: Grade Level Specification for Selected Courses

Test ID: TOB-004
Test Name: Grade Level Specification for Each Selected Course  
Purpose: Verify that tutors can specify grade levels for each selected course (elementary, middle, high school)
Expected Result: Grade level specification interface allows setting specific grade levels for each selected course

=== CONTEXT (Pre-test Requirements) ===

System Information:
- Project: Aprende Comigo Platform
- Architecture: Django REST backend + React Native frontend
- Feature: Individual Tutor Onboarding Flow (GitHub Issue #44)

Required Environment Setup:
1. Project Location: /Users/anapmc/Code/aprendecomigo
2. Python Virtual Environment: .venv/ in project root
3. Development servers running: `make dev`
4. Backend API endpoints accessible
5. Frontend accessible at http://localhost:8081

Test Data:
- Educational system selected (Portugal recommended)
- Multiple courses selected from previous step
- Grade level options should include: Elementary (K-5), Middle School (6-8), High School (9-12), University Level, Adult Education, Professional Development

=== DETAILED STEP-BY-STEP INSTRUCTIONS ===

Step 1: Navigate to Grade Level Specification
1. Complete course selection with 3-5 selected courses
2. Proceed to grade level specification step
3. Verify interface for specifying grade levels appears

Expected: Grade level specification interface loads with selected courses listed
Screenshot: 01_grade_level_interface.png

Step 2: Verify Grade Level Options Available
1. For each selected course, examine available grade level options
2. Verify comprehensive grade level options:
   - Elementary (K-5)
   - Middle School (6-8)  
   - High School (9-12)
   - University Level
   - Adult Education
   - Professional Development

Expected: All grade level options available for each course
Screenshot: 02_grade_level_options.png

Step 3: Test Single Grade Level Selection
1. Select one grade level for first course (e.g., High School)
2. Verify selection is recorded and visually indicated
3. Verify other courses remain unaffected

Expected: Single grade level selected and indicated clearly
Screenshot: 03_single_grade_selection.png

Step 4: Test Multiple Grade Level Selection for Same Course
1. For same course, select additional grade levels (e.g., Middle School + High School)
2. Verify multiple grade levels can be selected for single course
3. Verify all selections are maintained

Expected: Multiple grade levels can be selected for one course
Screenshot: 04_multiple_grades_same_course.png

Step 5: Test Grade Level Selection Across Different Courses
1. Set different grade levels for different courses:
   - Course 1: Elementary + Middle School
   - Course 2: High School + University
   - Course 3: Adult Education + Professional Development
2. Verify each course maintains its own grade level selections

Expected: Each course maintains independent grade level selections
Screenshot: 05_grades_across_courses.png

Step 6: Test Grade Level Deselection
1. Deselect a previously selected grade level from a course
2. Verify grade level is removed from that course
3. Verify other grade levels and courses remain unaffected

Expected: Individual grade levels can be deselected without affecting others
Screenshot: 06_grade_deselection.png

Step 7: Test Required Grade Level Validation
1. Try to proceed without selecting grade levels for some courses
2. Verify appropriate validation messages appear
3. Test that progression is blocked until all courses have grade levels

Expected: Validation requires grade level selection for all courses
Screenshot: 07_grade_validation.png

Step 8: Test Grade Level Visual Design and Clarity
1. Examine visual design of grade level selection interface
2. Verify clear labeling and descriptions of each grade level
3. Check for consistent visual treatment across all courses

Expected: Clear, intuitive interface with good visual design
Screenshot: 08_grade_visual_design.png

Step 9: Test Grade Level Logic and Appropriateness
1. Verify grade level options make sense for each course type
2. Check that course difficulty aligns with available grade levels
3. Verify no inappropriate grade level combinations

Expected: Grade level options are logical and appropriate for course types
Screenshot: 09_grade_logic_appropriateness.png

Step 10: Test Continue with Grade Level Specifications
1. Set grade levels for all selected courses
2. Verify continue button becomes enabled
3. Click continue to proceed to next step
4. Verify grade level data is maintained

Expected: Progression works correctly with grade level specifications maintained
Screenshot: 10_continue_with_grades.png

=== PASS/FAIL CRITERIA ===

PASS: Grade level specification interface allows setting appropriate grade levels for each selected course with clear validation and progression

FAIL: Missing grade level options, poor interface design, validation issues, or problems maintaining grade level data

Individual Step Criteria:
- Step 1: PASS if grade level interface loads properly, FAIL otherwise
- Step 2: PASS if all grade level options available, FAIL if missing options  
- Step 3: PASS if single grade selection works, FAIL if broken
- Step 4: PASS if multiple grades per course works, FAIL if restricted
- Step 5: PASS if independent grade selection across courses, FAIL if linked
- Step 6: PASS if grade deselection works properly, FAIL if issues
- Step 7: PASS if validation enforces grade selection, FAIL if missing validation
- Step 8: PASS if visual design is clear and intuitive, FAIL if confusing
- Step 9: PASS if grade options are logical and appropriate, FAIL if inappropriate
- Step 10: PASS if continue works and maintains data, FAIL otherwise

Overall Result: PASS only if ALL steps pass, FAIL if ANY step fails