QA Test Case: Multi-Select Course Functionality

Test ID: TOB-003
Test Name: Multi-Select Functionality for Choosing Multiple Courses to Teach
Purpose: Verify that tutors can select multiple courses using multi-select functionality with proper visual feedback and interaction
Expected Result: Multi-select interface allows selection of multiple courses with clear visual indicators and proper state management

=== CONTEXT (Pre-test Requirements) ===

System Information:
- Project: Aprende Comigo Platform
- Architecture: Django REST backend + React Native frontend
- Feature: Individual Tutor Onboarding Flow (GitHub Issue #44)

Required Environment Setup:
1. Project Location: /Users/anapmc/Code/aprendecomigo
2. Python Virtual Environment: .venv/ in project root
3. Development servers running: `make dev`
4. Backend API endpoints accessible
5. Frontend accessible at http://localhost:8081

Test Data:
- Educational system selected (Portugal recommended)
- Multiple courses available across different education levels
- Course data populated via Django migrations

=== DETAILED STEP-BY-STEP INSTRUCTIONS ===

Step 1: Navigate to Course Selection Interface
Commands:
  cd /Users/anapmc/Code/aprendecomigo
  make dev

1. Open browser to http://localhost:8081
2. Navigate through tutor onboarding to course selection step
3. Select educational system and reach course catalog
4. Verify multi-select interface is available

Expected: Course selection interface loads with multi-select capability
Screenshot: 01_multiselect_interface.png
Debug: Use 'make logs' to view server logs if issues occur

Step 2: Test Single Course Selection
1. Click/tap on a single course to select it
2. Verify visual feedback indicates selection (checkbox, highlight, etc.)
3. Verify course appears as selected in interface
4. Check for selection counter or indicator

Expected: Single course selected with clear visual feedback
- Course card/item shows selected state (highlight, checkmark, etc.)
- Selection counter shows "1 selected"
- Visual state clearly distinguishes selected from unselected

Screenshot: 02_single_course_selected.png

Step 3: Test Multiple Course Selection
1. Select a second course from same or different education level
2. Select a third course from different subject area
3. Verify both/all courses remain selected
4. Check selection counter updates correctly

Expected: Multiple courses can be selected simultaneously
- All selected courses show selected state
- Selection counter shows correct count "3 selected"
- No deselection of previous courses when selecting new ones

Screenshot: 03_multiple_courses_selected.png

Step 4: Test Course Deselection
1. Click/tap on a previously selected course to deselect it
2. Verify course is removed from selection
3. Verify other selected courses remain selected
4. Verify selection counter decreases

Expected: Individual courses can be deselected without affecting others
- Clicked course changes to unselected state
- Other selected courses remain selected
- Selection counter decreases appropriately

Screenshot: 04_course_deselection.png

Step 5: Test Selection Across Education Levels
1. Select courses from 1st Cycle Basic Education
2. Select courses from Secondary Education
3. Select courses from Higher Education
4. Verify all selections are maintained across different levels

Expected: Can select courses from multiple education levels simultaneously
- Courses from different levels can be selected together
- Education level organization doesn't restrict multi-selection
- All selections visible and maintained

Screenshot: 05_cross_level_selection.png

Step 6: Test Selection Across Subject Areas
1. Select a Mathematics course
2. Select a Language course
3. Select a Science course
4. Select a Humanities course
5. Verify all different subject areas can be selected together

Expected: Can select courses from multiple subject areas
- Different subject areas can be selected simultaneously
- No restrictions on subject diversity
- Subject area badges/indicators remain clear

Screenshot: 06_cross_subject_selection.png

Step 7: Test Selection Limits (if applicable)
1. Continue selecting courses to test if there are selection limits
2. If maximum limit exists, verify proper handling when limit reached
3. Test behavior when trying to select beyond limit
4. Verify appropriate messaging about limits

Expected: Selection limits (if any) are properly enforced and communicated
- Clear indication of maximum selection limit
- Proper handling when limit reached
- User-friendly messaging about selection constraints

Screenshot: 07_selection_limits.png

Step 8: Test Selection Visual Feedback
1. Examine visual design of selected vs unselected courses
2. Verify contrast and accessibility of selection indicators
3. Test hover states and interaction feedback
4. Verify consistency of visual treatment across all courses

Expected: Clear, consistent visual feedback for selection states
- High contrast between selected/unselected states
- Consistent visual treatment across all course items
- Good accessibility (color blind friendly, screen reader support)
- Clear hover/interaction states

Screenshot: 08_visual_feedback.png

Step 9: Test Selection State Persistence
1. Select multiple courses
2. Navigate to different section or back/forward if possible
3. Return to course selection
4. Verify all selections are maintained

Expected: Selection state persists during navigation
- Selected courses remain selected after navigation
- Selection count maintained correctly
- No loss of selection state

Screenshot: 09_selection_persistence.png

Step 10: Test Continue with Multiple Selections
1. Select 3-5 courses from different areas
2. Verify continue/next button shows selection count
3. Click continue button
4. Verify selected courses are passed to next step

Expected: Multiple selections are properly handled in flow progression
- Continue button reflects selection count
- All selected courses advance to next step
- No loss of selection data

Screenshot: 10_continue_with_selections.png

=== PASS/FAIL CRITERIA ===

PASS: Multi-select functionality works correctly allowing selection of multiple courses with clear visual feedback, proper state management, and smooth progression

FAIL: Multi-select not working, poor visual feedback, selection state issues, or problems with continuing with multiple selections

Individual Step Criteria:
- Step 1: PASS if multi-select interface loads, FAIL if interface issues
- Step 2: PASS if single selection works with visual feedback, FAIL otherwise
- Step 3: PASS if multiple selection works correctly, FAIL if issues
- Step 4: PASS if deselection works without affecting others, FAIL otherwise
- Step 5: PASS if cross-level selection works, FAIL if restricted
- Step 6: PASS if cross-subject selection works, FAIL if restricted
- Step 7: PASS if selection limits handled properly, FAIL if poor handling
- Step 8: PASS if visual feedback is clear and accessible, FAIL if poor
- Step 9: PASS if selection state persists, FAIL if selections lost
- Step 10: PASS if continue works with multiple selections, FAIL otherwise

Overall Result: PASS only if ALL steps pass, FAIL if ANY step fails