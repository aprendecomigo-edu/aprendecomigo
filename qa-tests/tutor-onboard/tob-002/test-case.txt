QA Test Case: Course Catalog Browser Interface

Test ID: TOB-002
Test Name: Course Browsing Interface Organized by Education Level and Subject Area
Purpose: Verify that the course catalog browser displays courses organized by education level and subject area with clear navigation
Expected Result: Course catalog displays well-organized course listings with proper categorization and intuitive navigation

=== CONTEXT (Pre-test Requirements) ===

System Information:
- Project: Aprende Comigo Platform
- Architecture: Django REST backend + React Native frontend
- Feature: Individual Tutor Onboarding Flow (GitHub Issue #44)

Required Environment Setup:
1. Project Location: /Users/anapmc/Code/aprendecomigo
2. Python Virtual Environment: .venv/ in project root
3. Development servers running: `make dev`
4. Backend API endpoints accessible
5. Frontend accessible at http://localhost:8081

Test Data:
- Educational system selected (Portugal recommended for comprehensive course data)
- Course data populated via Django migrations
- Various education levels should be available (basic, secondary, higher education)
- Multiple subject areas should be represented

=== DETAILED STEP-BY-STEP INSTRUCTIONS ===

Step 1: Navigate to Course Selection Step
Commands:
  cd /Users/anapmc/Code/aprendecomigo
  make dev

1. Open browser to http://localhost:8081
2. Navigate through tutor onboarding to course selection step
3. Select Portugal educational system (recommended for complete data)
4. Proceed to course catalog browser

Expected: Course catalog browser interface loads with course listings
Screenshot: 01_course_catalog_loaded.png
Debug: Use 'make logs' to view server logs if issues occur

Step 2: Verify Education Level Organization
1. Examine how courses are grouped/organized in the interface
2. Verify courses are grouped by education level
3. Check for proper education level labels and descriptions
4. Verify hierarchical organization (basic → secondary → higher education)

Expected: Courses organized by education levels with clear sections:
- 1st Cycle Basic Education (Ages 6-10)
- 2nd Cycle Basic Education (Ages 10-12)
- 3rd Cycle Basic Education (Ages 12-15)
- Secondary Education (Ages 15-18)
- Higher Education (University level)

Screenshot: 02_education_level_organization.png

Step 3: Verify Subject Area Categorization
1. Within each education level, check subject area organization
2. Verify courses are grouped or tagged by subject area
3. Check for subject area labels/badges
4. Verify common subject areas are represented (Math, Science, Languages, etc.)

Expected: Clear subject area categorization within education levels
- Math/Mathematics courses clearly identified
- Science courses (Physics, Chemistry, Biology) grouped/tagged
- Language courses identified
- Humanities subjects categorized
- Other subject areas properly labeled

Screenshot: 03_subject_area_categorization.png

Step 4: Test Course Information Display
1. Examine individual course listings
2. Verify each course shows essential information:
   - Course name
   - Course code (if applicable)
   - Education level badge/indicator
   - Subject area badge/indicator
   - Course description
   - Difficulty level (if available)

Expected: Each course displays comprehensive information in organized format
Screenshot: 04_course_information_display.png

Step 5: Test Navigation Between Education Levels
1. If interface has sections/tabs for different education levels, test navigation
2. Click/tap to switch between different education levels
3. Verify content updates appropriately
4. Check for smooth transitions and loading states

Expected: Smooth navigation between education levels, content updates correctly
Screenshot: 05_education_level_navigation.png

Step 6: Test Subject Area Filtering/Browsing
1. Look for subject area filters or organization features
2. Test filtering by specific subject areas
3. Verify courses are filtered correctly
4. Test clearing filters and returning to full view

Expected: Subject area filtering works correctly, shows relevant courses
Screenshot: 06_subject_area_filtering.png

Step 7: Verify Course Listing Completeness
1. Count approximate number of courses in each education level
2. Verify reasonable variety of subjects represented
3. Check that course listings appear complete (not truncated)
4. Verify all education levels have appropriate course offerings

Expected: Comprehensive course listings with good variety across all levels
Screenshot: 07_course_listing_completeness.png

Step 8: Test Course Details and Descriptions
1. Click on individual courses to view details (if expandable)
2. Verify course descriptions are informative
3. Check for additional course metadata
4. Verify learning objectives or prerequisites if displayed

Expected: Course details are accessible and informative
Screenshot: 08_course_details.png

Step 9: Test Visual Design and Organization
1. Assess overall visual hierarchy and organization
2. Verify clear distinction between education levels
3. Check subject area visual indicators (colors, icons, badges)
4. Verify interface is scannable and easy to navigate

Expected: Clear visual hierarchy, good use of colors/badges, easy to scan
Screenshot: 09_visual_design_organization.png

Step 10: Test Performance and Loading
1. Observe initial loading time for course catalog
2. Test scrolling performance with large course lists
3. Verify smooth interactions when navigating categories
4. Check for any loading states or performance issues

Expected: Fast loading, smooth scrolling, responsive interactions
Screenshot: 10_performance_loading.png

=== PASS/FAIL CRITERIA ===

PASS: Course catalog browser displays courses clearly organized by education level and subject area, with intuitive navigation, comprehensive course information, and good visual design

FAIL: Poor organization, missing categorization, unclear navigation, incomplete course information, or poor visual design

Individual Step Criteria:
- Step 1: PASS if course catalog loads properly, FAIL if doesn't load
- Step 2: PASS if clear education level organization, FAIL if poorly organized
- Step 3: PASS if clear subject area categorization, FAIL if missing/unclear
- Step 4: PASS if course information is comprehensive, FAIL if incomplete
- Step 5: PASS if education level navigation works smoothly, FAIL if broken
- Step 6: PASS if subject filtering works correctly, FAIL if broken/missing
- Step 7: PASS if course listings are comprehensive, FAIL if sparse/incomplete
- Step 8: PASS if course details are accessible and informative, FAIL otherwise
- Step 9: PASS if visual design is clear and organized, FAIL if confusing
- Step 10: PASS if performance is good, FAIL if slow/unresponsive

Overall Result: PASS only if ALL steps pass, FAIL if ANY step fails