QA Test Case: Direct Message Creation

Test ID: CHAT-003
Test Name: Direct Message Creation and One-on-One Conversations
Purpose: Verify that users can create direct message conversations with other individuals
Expected Result: Users can successfully create and access direct message conversations

=== CONTEXT (Pre-test Requirements) ===

System Information:
- Project: Aprende Comigo - Educational platform
- Architecture: Django REST backend + React Native frontend
- Chat Feature: Slack-style messaging with direct message support
- Business Rule: Any authenticated user can create direct messages

Required Environment Setup:
1. Project Location: /Users/anapmc/Code/aprendecomigo/
2. Python Virtual Environment: .venv/ in project root
3. Environment Variables:
   - DJANGO_ENV=development
   - EXPO_PUBLIC_ENV=development

Test Data:
- Primary User: anapmc.carvalho@gmail.com
- Target User: Another user account for DM (teacher or student)
- Should have at least 2 users total in the system

Prerequisites:
- Chat interface is functional (CHAT-001 passed)
- User authenticated
- Backend/frontend services running
- Redis server running for WebSocket support
- At least one other user exists in system for DM testing

=== DETAILED STEP-BY-STEP INSTRUCTIONS ===

Step 1: Navigate to Chat Interface
1. Navigate to chat interface (http://localhost:8081/chat)
2. Verify sidebar shows "Mensagens Diretas" (Direct Messages) section
3. Look for + button next to "Mensagens Diretas" section
4. Confirm user is properly authenticated

Expected: Chat interface loads with DM section and create button
Screenshot: 01_chat_interface_dm_section.png

Step 2: Initiate Direct Message Creation
1. Click the + button next to "Mensagens Diretas" (Direct Messages) section
2. Verify channel creation modal opens
3. Check that modal shows type selection options

Expected: Modal opens with channel type selection
Screenshot: 02_dm_creation_modal_opened.png

Step 3: Select Direct Message Type
1. In the modal, verify two options are available:
   - "Canal do Grupo" (Group Channel)
   - "Mensagem Direta" (Direct Message)
2. Select "Mensagem Direta" (Direct Message) option
3. Verify option is highlighted/selected
4. Click "Continuar" (Continue) button

Expected: Direct message option selected and proceeds to next step
Screenshot: 03_dm_type_selected.png

Step 4: Skip Channel Details (DM-specific flow)
1. Verify that channel name input is skipped for direct messages
2. Should show message about creating direct conversation
3. Modal should proceed directly to participant selection
4. Click "Continuar" if needed to reach participant selection

Expected: DM flow skips channel naming and goes to participant selection
Screenshot: 04_dm_details_skipped.png

Step 5: Search for DM Recipient
1. Verify participant selection interface loads
2. Verify header mentions selecting one person for DM
3. Use search box to find target user
4. Type partial name or email of another user in system
5. Verify search results appear below

Expected: User search works and shows available users
Screenshot: 05_dm_user_search.png

Step 6: Select DM Recipient
1. Click on target user from search results
2. Verify user appears in "Selecionados" (Selected) section
3. Confirm only one user can be selected for DM
4. Test that selecting additional users replaces the first selection
5. Verify selected user shows avatar and name

Expected: Single user selected for direct message
Screenshot: 06_dm_recipient_selected.png

Step 7: Create Direct Message
1. With one participant selected, click "Criar Conversa" (Create Conversation)
2. Verify loading state shows "Criando..." (Creating...)
3. Wait for modal to close automatically
4. Check that new DM appears in "Mensagens Diretas" section

Expected: DM creation succeeds and appears in sidebar
Screenshot: 07_dm_created_successfully.png

Step 8: Verify DM Display
1. Click on newly created DM in sidebar
2. Verify DM opens in main content area
3. Check DM header shows:
   - Other person's name (not "Direct Message")
   - Avatar of the other person
   - Online status if available
4. Verify message input is available

Expected: DM displays with other person's name and proper formatting
Screenshot: 08_dm_display_proper.png

Step 9: Test DM Uniqueness
1. Try creating another DM with the same person
2. Verify system either:
   - Prevents duplicate creation and opens existing DM, OR
   - Shows appropriate message about existing conversation
3. Confirm no duplicate DMs are created

Expected: System handles duplicate DM attempts appropriately
Screenshot: 09_dm_duplicate_handling.png

Step 10: Verify DM Persistence
1. Refresh browser page
2. Navigate back to chat
3. Verify DM still appears in "Mensagens Diretas" section
4. Click on DM to ensure it still functions
5. Check that conversation history is maintained

Expected: DM persists and remains functional after refresh
Screenshot: 10_dm_persists_after_refresh.png

Step 11: Test DM vs Group Channel Differences
1. Compare DM display with group channel display
2. Verify DMs show:
   - Person's name instead of channel name
   - Avatar instead of # icon
   - Online status indicator if available
3. Confirm DMs appear in correct section

Expected: DMs display differently from group channels with proper formatting
Screenshot: 11_dm_vs_channel_display.png

Step 12: Verify API Integration
1. Check browser network tab during DM creation
2. Verify API call to /api/channels/ with is_direct: true
3. Confirm participant_ids contains exactly 2 users (creator + recipient)
4. Check no API errors during creation

Expected: API calls succeed with correct DM-specific data
Screenshot: 12_dm_api_calls_successful.png

=== PASS/FAIL CRITERIA ===

PASS: All conditions met:
- + button accessible for DM creation
- Modal opens and DM type can be selected
- DM flow skips channel naming appropriately
- User search works for finding recipients
- Single recipient can be selected for DM
- DM creation completes successfully
- DM appears in "Mensagens Diretas" section
- DM displays with recipient's name and avatar
- Duplicate DM attempts are handled properly
- DM persists after page refresh
- DM formatting differs appropriately from group channels
- API integration works correctly

FAIL: Any condition not met:
- Cannot initiate DM creation
- Modal broken or type selection doesn't work
- DM flow requires channel naming (incorrect)
- User search broken or no results
- Cannot select recipient or multiple selection allowed
- DM creation fails or shows errors
- DM doesn't appear in correct section
- DM displays incorrectly (wrong name/avatar)
- Duplicate DMs created inappropriately
- DM lost after page refresh
- DM looks identical to group channels
- API calls fail or contain incorrect data

Individual Step Criteria:
- Step 1: PASS if DM section visible with + button, FAIL if missing
- Step 2: PASS if modal opens, FAIL if broken or doesn't open
- Step 3: PASS if DM type selectable, FAIL if option missing
- Step 4: PASS if channel naming skipped for DMs, FAIL if required
- Step 5: PASS if user search works, FAIL if broken or no results
- Step 6: PASS if single recipient selectable, FAIL if multi-select or broken
- Step 7: PASS if DM creation succeeds, FAIL if errors or failure
- Step 8: PASS if DM displays properly, FAIL if wrong formatting
- Step 9: PASS if duplicates handled well, FAIL if duplicates created
- Step 10: PASS if DM persists, FAIL if lost after refresh
- Step 11: PASS if DM formatting differs from channels, FAIL if identical
- Step 12: PASS if API calls succeed, FAIL if errors or wrong data

Overall Result: PASS only if ALL steps pass, FAIL if ANY step fails

=== NOTES FOR TESTER ===

- Focus on the differences between DM and group channel creation flows
- Pay attention to how DMs are displayed vs group channels
- Test with users of different roles (teacher to student, etc.)
- Verify that DM recipient's name is used, not generic "Direct Message"
- Check for online status indicators if implemented
- Document any UX differences between creating DMs vs group channels
- Note any performance differences in user search vs participant selection
