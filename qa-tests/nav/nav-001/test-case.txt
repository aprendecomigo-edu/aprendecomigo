QA Test Case: School Manager Users Tab Access and Role-Based Permissions

Test ID: NAV-001
Test Name: School Manager Users Tab Access and Role-Based Permissions
Purpose: Verify that a school manager can access the /users route and see appropriate tabs (Teachers, Students, Staff) with correct permissions for their school
Expected Result: User successfully navigates to /users page and sees all three tabs with appropriate content and functionality

=== CONTEXT (Pre-test Requirements) ===

System Information:
- Project: Aprende Comigo - Educational platform
- Architecture: Django REST backend + React Native frontend with web support
- Authentication: Passwordless email verification with Knox tokens
- User Role: School Manager/Owner with permissions to manage school users

Required Environment Setup:
1. Project Location: /Users/anapmc/Code/aprendecomigo/
2. Python Virtual Environment: .venv/ in project root
3. Environment Variables:
   - DJANGO_ENV=development
   - EXPO_PUBLIC_ENV=development

Test Data:
- Test Email: anapmc.carvalho@gmail.com
- User Role: school_owner
- Expected School: Should have an associated school for management
- Database State: User should exist and be authenticated, with appropriate school permissions

=== DETAILED STEP-BY-STEP INSTRUCTIONS ===

Step 1: Environment Setup and Server Start
Commands:
  cd /Users/anapmc/Code/aprendecomigo
  source .venv/bin/activate
  cd backend
  python manage.py runserver --settings=aprendecomigo.settings.development

Expected: Django development server starts successfully on port 8000
Screenshot: 01_backend_server_started.png

Step 2: Start Frontend Development Server
Commands:
  # In new terminal
  cd /Users/anapmc/Code/aprendecomigo/frontend-ui
  npm start

Expected: Expo development server starts and shows QR code/options
Screenshot: 02_frontend_server_started.png

Step 3: Navigate to Web Application
1. Open browser to http://localhost:8081
2. Verify login page loads correctly
3. If already logged in, proceed to Step 5

Expected: Login page displays with email input field
Screenshot: 03_login_page_loaded.png

Step 4: Authenticate User (if needed)
1. Enter test email: anapmc.carvalho@gmail.com
2. Click "Enviar código" button
3. Check backend logs for verification code
4. Enter 6-digit verification code
5. Click verify button

Expected: User successfully authenticates and reaches dashboard
Screenshot: 04_authentication_successful.png

Step 5: Navigate to Users Page
1. Click on "Users" or "Usuários" in the main navigation menu
2. Verify URL changes to /users
3. Wait for page to load completely

Expected: Users page loads with tab interface visible
Screenshot: 05_users_page_loaded.png

Step 6: Verify Tab Presence and Layout
1. Check that all three tabs are visible:
   - "Professores" (Teachers)
   - "Alunos" (Students)
   - "Colaboradores" (Staff)
2. Verify tab layout and styling
3. Note which tab is active by default (should be Teachers)

Expected: All three tabs visible with Teachers tab active by default
Screenshot: 06_all_tabs_visible.png

Step 7: Test Teachers Tab Functionality
1. Ensure Teachers tab is selected (default)
2. Verify teachers list displays (may be empty initially)
3. Check for action buttons:
   - "Adicionar-me como professor" (Add me as teacher)
   - "Convidar professor" (Invite teacher)
4. Verify table headers: Nome, Email, Especialidade, Status
5. Check for appropriate empty state if no teachers exist

Expected: Teachers tab shows list/empty state with action buttons
Screenshot: 07_teachers_tab_content.png

Step 8: Test Students Tab Access
1. Click on "Alunos" (Students) tab
2. Wait for tab content to load
3. Verify students list displays (may be empty)
4. Check for action buttons:
   - "Adicionar aluno" (Add student)
   - "Importar lista" (Import list)
5. Verify table headers: Nome, Email, Turma, Status

Expected: Students tab shows list/empty state with action buttons
Screenshot: 08_students_tab_content.png

Step 9: Test Staff Tab Access
1. Click on "Colaboradores" (Staff) tab
2. Wait for tab content to load
3. Verify staff list displays (may be empty)
4. Check for action button:
   - "Convidar colaborador" (Invite staff member)
5. Verify table headers: Nome, Email, Cargo, Status

Expected: Staff tab shows list/empty state with action button
Screenshot: 09_staff_tab_content.png

Step 10: Test Tab Navigation
1. Switch between all three tabs multiple times
2. Verify each tab loads properly without errors
3. Check that tab state is maintained during switching
4. Verify tab highlighting/active state updates correctly

Expected: Smooth tab switching with proper state management
Screenshot: 10_tab_navigation_working.png

Step 11: Test Action Button Visibility and Permissions
1. In Teachers tab, verify both action buttons are visible and clickable
2. In Students tab, verify both action buttons are visible and clickable
3. In Staff tab, verify action button is visible and clickable
4. Test hover states on action buttons (web only)

Expected: All action buttons appropriate for school manager role are present
Screenshot: 11_action_buttons_visible.png

Step 12: Verify No Unauthorized Content
1. Check that no error messages about permissions appear
2. Verify no loading states persist indefinitely
3. Confirm no network errors in browser console
4. Check backend logs for any permission-related warnings

Expected: No permission errors or unauthorized access warnings
Screenshot: 12_no_permission_errors.png

=== PASS/FAIL CRITERIA ===

PASS: All steps complete successfully AND all three tabs are accessible with appropriate content AND action buttons are visible for school manager role
FAIL: Any step fails OR tabs are missing OR permission errors occur OR action buttons are not visible

Individual Step Criteria:
- Step 1-2: PASS if servers start without errors, FAIL if startup fails
- Step 3-4: PASS if authentication works, FAIL if login fails
- Step 5: PASS if /users page loads, FAIL if navigation fails or 404 error
- Step 6: PASS if all 3 tabs visible, FAIL if any tab missing or layout broken
- Step 7: PASS if Teachers tab shows content and buttons, FAIL if tab empty/broken
- Step 8: PASS if Students tab accessible and functional, FAIL if tab inaccessible
- Step 9: PASS if Staff tab accessible and functional, FAIL if tab inaccessible
- Step 10: PASS if tab switching works smoothly, FAIL if switching breaks
- Step 11: PASS if action buttons visible and functional, FAIL if buttons missing
- Step 12: PASS if no permission errors, FAIL if unauthorized access warnings

Overall Result: PASS only if ALL steps pass, FAIL if ANY step fails

Notes:
- This test validates the core navigation and permission structure for the users management interface
- Focus on role-based access - school managers should see all tabs for their school
- Empty states are acceptable as long as the interface structure is correct
- Action buttons should be present even if functionality is not fully implemented
