QA Test Case: Teacher Profile Wizard Form Validation

Test ID: TPROF-002
Test Name: Form Validation Testing
Purpose: Verify comprehensive form validation across all wizard steps for required fields, data formats, and business rules
Expected Result: All validation rules work correctly, providing clear error messages and preventing invalid data submission

=== CONTEXT (Pre-test Requirements) ===

System Information:
- Project: Aprende Comigo EdTech Platform
- Architecture: React Native + Expo frontend with Django REST backend
- Feature: Teacher Profile Creation Wizard validation system

Required Environment Setup:
1. Project Location: /Users/anapmc/Code/aprendecomigo
2. Development servers: `make dev`
3. Access wizard at: http://localhost:8081/onboarding/teacher-profile

Test Data:
- Valid test email: validation.test@aprendecomigo.com
- Invalid data examples for each field type
- Boundary value test cases

Pre-Conditions:
- User authenticated and has access to teacher profile wizard
- Clean profile state for testing validation

=== DETAILED STEP-BY-STEP INSTRUCTIONS ===

Step 1: Basic Information Validation Testing
1. Navigate to Basic Information step (Step 1/7)
2. Test required field validation:

   a) Name Field Validation:
   - Leave first name empty, try to proceed
   - Enter single character: "A"
   - Enter 100+ characters: Long string
   - Enter numbers/special chars: "123", "@#$"
   - Enter valid name: "Maria"

   b) Professional Title Validation:
   - Leave empty (should be required)
   - Enter 1 character: "T"
   - Enter 200+ characters: Very long title
   - Enter valid title: "Mathematics Tutor"

   c) Phone Number Validation:
   - Leave empty (should be optional but validated if filled)
   - Enter invalid format: "123"
   - Enter letters: "abcdefg"
   - Enter too long: "123456789012345678"
   - Enter valid: "+351912345678"

   d) Email Validation:
   - Should be pre-populated and disabled
   - Verify cannot be edited

   e) Location Validation:
   - Leave city empty, try to proceed
   - Enter invalid characters in city: "City123"
   - Select country without city
   - Verify timezone auto-populates based on country

   f) Languages Validation:
   - Try to proceed without selecting any language
   - Select 10+ languages (test if limit exists)
   - Verify minimum 1 language required

   g) Experience Validation:
   - Try to proceed without selecting years
   - Verify cannot enter negative years
   - Test maximum years (100+)

3. For each validation error, verify:
   - Clear error message displayed
   - Field highlighted in red
   - "Next Step" button remains disabled
   - Error clears when valid data entered

Expected: All validation rules work, clear error messages shown
Screenshot: 01_basic_info_validation.png

Step 2: Biography Validation Testing
1. Navigate to Biography step
2. Test professional bio validation:

   a) Character Limit Testing:
   - Enter exactly 500 words
   - Try to enter 501+ words
   - Verify character counter shows remaining chars
   - Verify rich text editor prevents excess input

   b) Required Field Testing:
   - Leave professional bio empty
   - Try to proceed to next step
   - Verify error message for empty bio

   c) Rich Text Editor Validation:
   - Test formatting options work
   - Try to paste content exceeding limit
   - Test special characters in bio
   - Test HTML/script tags (should be sanitized)

   d) Other Field Validation:
   - Teaching philosophy (required minimum length?)
   - Specializations (minimum 1 required?)
   - Achievements (format validation?)

Expected: Biography validation prevents invalid content, maintains word limits
Screenshot: 02_biography_validation.png

Step 3: Education Validation Testing
1. Navigate to Education step
2. Test degree validation:

   a) Required Fields:
   - Try to add degree without degree type
   - Try to add degree without field of study
   - Try to add degree without institution
   - Verify graduation year validation

   b) Date Validation:
   - Enter future graduation year
   - Enter graduation year before 1900
   - Enter invalid year format

   c) Multiple Degrees:
   - Try to add duplicate degrees
   - Test maximum number of degrees (if limit exists)

3. Test certification validation:
   a) Required vs Optional Fields:
   - Name (required)
   - Issuing organization (required)
   - Issue date (required, format validation)
   - Expiration date (optional, must be after issue date)

   b) Date Logic Validation:
   - Expiration date before issue date
   - Future issue dates
   - Invalid date formats

Expected: Education validation prevents invalid dates and ensures required fields
Screenshot: 03_education_validation.png

Step 4: Subjects Validation Testing
1. Navigate to Subjects step
2. Test subject entry validation:

   a) Required Fields:
   - Try to proceed without adding any subjects
   - Add subject without selecting grade levels
   - Add subject without expertise level

   b) Subject Duplication:
   - Try to add same subject twice
   - Verify system prevents duplicates

   c) Grade Level Logic:
   - Select grade levels that don't match subject
   - Verify logical combinations

   d) Years Teaching Validation:
   - Enter negative years
   - Enter years > total experience from basic info
   - Enter 0 years (should be valid)

Expected: Subject validation ensures at least one subject with proper configuration
Screenshot: 04_subjects_validation.png

Step 5: Rates Validation Testing
1. Navigate to Rates step
2. Test pricing validation:

   a) Rate Field Validation:
   - Enter negative rates
   - Enter 0 rate (should be valid for trial)
   - Enter extremely high rates (1000+)
   - Enter non-numeric values
   - Leave individual rate empty (required)

   b) Rate Logic Validation:
   - Group rate higher than individual rate
   - Trial rate higher than individual rate
   - Verify logical pricing relationships

   c) Package Deal Validation:
   - Create package with 0 sessions
   - Create package with negative price
   - Create package more expensive than individual sessions
   - Verify discount calculation accuracy

   d) Currency and Payment Methods:
   - Try to proceed without selecting payment methods
   - Verify currency affects rate display

Expected: Rate validation ensures logical pricing structure
Screenshot: 05_rates_validation.png

Step 6: Availability Validation Testing
1. Navigate to Availability step
2. Test schedule validation:

   a) Time Slot Validation:
   - Create overlapping time slots same day
   - Set end time before start time
   - Set 24+ hour continuous availability
   - Create very short slots (5 minutes)

   b) Booking Preferences:
   - Set minimum notice > maximum advance booking
   - Set negative values
   - Set extremely high values (1000+ days)

   c) Session Duration:
   - Add 0-minute duration
   - Add 500+ minute duration
   - Verify at least one duration required

Expected: Availability validation prevents scheduling conflicts and invalid times
Screenshot: 06_availability_validation.png

Step 7: Cross-Step Validation Testing
1. Test data consistency across steps:

   a) Experience Consistency:
   - Years teaching per subject should not exceed total experience
   - Graduation dates should align with experience claims

   b) Location Consistency:
   - Timezone should match selected country
   - Rate currency should align with location

   c) Subject-Rate Consistency:
   - Package deals should make sense for selected subjects
   - Rate levels should align with expertise claims

Expected: Cross-step validation maintains data consistency
Screenshot: 07_cross_validation.png

Step 8: Preview Step Validation
1. Navigate to Preview step with incomplete data
2. Verify preview shows validation warnings
3. Test that "Complete Profile" is disabled if validation errors exist
4. Verify preview accurately reflects all entered data

Expected: Preview step prevents completion with validation errors
Screenshot: 08_preview_validation.png

Step 9: Server-Side Validation Testing
1. Submit form with edge case data
2. Verify server validation catches client-side bypass attempts
3. Test API response includes proper error messages
4. Verify error messages are displayed to user properly

Expected: Server validation provides backup for client validation
Screenshot: 09_server_validation.png

=== PASS/FAIL CRITERIA ===

PASS: All validation rules work correctly AND provide clear error messages AND prevent invalid data submission
FAIL: Any validation rule fails OR unclear error messages OR invalid data can be submitted

Individual Validation Criteria:
- Required Fields: PASS if all required fields properly validated, FAIL if any can be skipped
- Data Format: PASS if format validation works (emails, phones, dates), FAIL if invalid formats accepted
- Business Logic: PASS if business rules enforced (rate logic, date logic), FAIL if illogical data accepted
- Error Messages: PASS if all error messages clear and helpful, FAIL if confusing or missing messages
- Cross-Field: PASS if data consistency maintained across steps, FAIL if inconsistencies allowed
- Character Limits: PASS if text limits enforced properly, FAIL if limits can be exceeded
- Numeric Validation: PASS if numeric constraints work, FAIL if invalid numbers accepted

Performance Requirements:
- Validation should occur within 200ms of field blur/change
- Error messages should appear immediately
- Form should remain responsive during validation

Overall Result: PASS only if ALL validation rules work correctly, FAIL if ANY critical validation fails or can be bypassed