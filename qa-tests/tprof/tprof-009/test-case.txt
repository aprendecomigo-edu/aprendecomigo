QA Test Case: Course Catalog Browsing and Organization

Test ID: TPROF-009
Test Name: Course Catalog Browsing Interface Organization by Education Level and Subject Area
Purpose: Verify the CourseCatalogBrowser component displays courses with proper organization by education level and subject area as per GitHub issue #44
Expected Result: Course catalog displays with logical hierarchy, clear organization, and intuitive browsing experience

=== CONTEXT (Pre-test Requirements) ===

System Information:
- Project: Aprende Comigo EdTech Platform
- Architecture: React Native + Expo frontend with Django REST backend
- Component: CourseCatalogBrowser from GitHub issue #44
- Location: frontend-ui/components/onboarding/course-catalog-browser.tsx

Required Environment Setup:
1. Project Location: /Users/anapmc/Code/aprendecomigo
2. Development servers: `make dev-open`
3. Access to tutor onboarding flow after educational system selection

Test Data:
- Educational System: Portugal (primary test)
- Expected Education Levels: Primary (1º-4º ano), Middle School (5º-9º ano), High School (10º-12º ano), University
- Expected Subject Areas: Mathematics, Sciences, Languages, Social Studies, Arts, Technology
- Sample Courses: Mathematics (various grades), Physics, Chemistry, Biology, Portuguese, History

Component Requirements (GitHub Issue #44):
- Course browsing interface organized by education level and subject area
- Clear visual hierarchy and logical grouping
- Intuitive navigation through course categories
- Professional presentation suitable for tutor selection

API Endpoint to Test:
- GET /api/accounts/courses/ with filtering parameters

=== DETAILED STEP-BY-STEP INSTRUCTIONS ===

Step 1: Access Course Catalog Browser
1. Complete tutor onboarding up to course catalog step
2. Select Portugal educational system (from previous step)
3. Verify CourseCatalogBrowser component loads
4. Check that component displays course catalog title/header
5. Verify loading states are handled gracefully

Expected: Course catalog browser loads successfully after educational system selection
Screenshot: 01_catalog_browser_loaded.png
API Check: Verify GET /api/accounts/courses/?educational_system=portugal called

Step 2: Verify Primary Education Level Organization
1. Locate Primary education level section (1º-4º ano)
2. Verify clear section header with grade range indication
3. Check subject area organization within Primary level:
   - Mathematics (1º-4º ano)
   - Portuguese Language (1º-4º ano)
   - Environmental Studies (1º-4º ano)
   - Arts and Physical Education
4. Verify courses are properly grouped by subject
5. Check visual hierarchy makes Primary level distinct

Expected: Primary education level clearly organized with appropriate subjects
Screenshot: 02_primary_level_organization.png

Step 3: Verify Middle School Education Level Organization
1. Locate Middle School section (5º-9º ano)
2. Verify clear section header and grade range
3. Check subject area organization:
   - Mathematics (5º-9º ano)
   - Sciences (Natural Sciences, Geography)
   - Languages (Portuguese, English)
   - History and Social Studies
   - Technology and Arts
4. Verify more specialized subjects appear at this level
5. Check logical progression from Primary level

Expected: Middle School level shows increased subject specialization with clear organization
Screenshot: 03_middle_school_organization.png

Step 4: Verify High School Education Level Organization
1. Locate High School section (10º-12º ano)
2. Verify comprehensive subject area organization:
   - Mathematics (including advanced topics)
   - Sciences (Physics, Chemistry, Biology as separate subjects)
   - Languages (Portuguese, Foreign Languages)
   - Social Sciences (History, Geography, Philosophy)
   - Arts and Technology
3. Check that specialized subjects are clearly separated
4. Verify grade-specific options (10º, 11º, 12º ano)

Expected: High School level shows full subject specialization with clear separation
Screenshot: 04_high_school_organization.png

Step 5: Verify University Level Organization (if applicable)
1. Check if University level courses are present
2. Verify organization by academic disciplines:
   - Advanced Mathematics
   - Engineering subjects
   - Science specializations
   - Language and Literature
   - Professional fields
3. Check that university-level complexity is indicated
4. Verify appropriate for tutoring context

Expected: University level (if present) shows academic discipline organization
Screenshot: 05_university_level_organization.png

Step 6: Test Mathematics Subject Area Organization
1. Focus on Mathematics across all education levels
2. Verify logical progression:
   - Primary: Basic arithmetic, geometry concepts
   - Middle School: Algebra introduction, advanced arithmetic
   - High School: Advanced algebra, geometry, calculus introduction
   - University: Calculus, advanced mathematics
3. Check that grade levels are clearly indicated for each math course
4. Verify descriptions help distinguish course difficulty

Expected: Mathematics shows clear progression and appropriate grade level assignments
Screenshot: 06_mathematics_organization.png

Step 7: Test Sciences Subject Area Organization
1. Examine Sciences organization across levels:
   - Primary: Environmental Studies, basic science concepts
   - Middle School: Natural Sciences (integrated)
   - High School: Physics, Chemistry, Biology (separated)
   - University: Advanced scientific disciplines
2. Verify clear separation of sciences at appropriate levels
3. Check that prerequisites are logical (e.g., basic before advanced)
4. Verify scientific accuracy in course descriptions

Expected: Sciences show appropriate separation and progression by education level
Screenshot: 07_sciences_organization.png

Step 8: Test Languages Subject Area Organization
1. Examine Languages across education levels:
   - Portuguese (native language) across all levels
   - English (foreign language) from middle school up
   - Other foreign languages at high school/university
2. Verify native vs. foreign language distinction
3. Check proficiency levels are appropriately indicated
4. Verify cultural context appropriate for Portuguese system

Expected: Languages show appropriate native/foreign distinction and level progression
Screenshot: 08_languages_organization.png

Step 9: Verify Visual Hierarchy and Design
1. Check overall visual hierarchy:
   - Education levels clearly distinguished (headers, colors, spacing)
   - Subject areas logically grouped within levels
   - Individual courses clearly presented
   - Consistent design patterns throughout
2. Verify professional appearance suitable for tutor selection
3. Check that information density is appropriate (not overwhelming)
4. Verify accessibility considerations (contrast, font sizes)

Expected: Visual hierarchy clear, professional design, appropriate information density
Screenshot: 09_visual_hierarchy.png

Step 10: Test Navigation and Browsing Experience
1. Test scrolling through different education levels
2. Verify smooth navigation between sections
3. Check if collapsible sections work (if implemented)
4. Test any category filters or view options
5. Verify browsing feels intuitive and efficient
6. Check loading performance as user browses

Expected: Navigation smooth, browsing experience intuitive and efficient
Screenshot: 10_navigation_experience.png

Step 11: Verify Course Information Display
1. Check individual course information includes:
   - Course name clearly displayed
   - Grade levels specified
   - Subject area categorization
   - Brief description (if provided)
   - Any difficulty indicators
2. Verify information helps tutors make informed selections
3. Check consistency in information presentation
4. Verify no essential information is missing

Expected: Course information comprehensive and consistently presented
Screenshot: 11_course_information.png

Step 12: Test with Different Educational Systems
1. Navigate back and select Brazil educational system
2. Verify course catalog updates to show Brazilian courses
3. Check that organization adapts to Brazilian structure:
   - Different grade nomenclature (séries instead of anos)
   - Brazilian-specific subjects and curriculum
   - Appropriate cultural context
4. Test Custom educational system organization
5. Verify API calls update correctly for different systems

Expected: Course catalog adapts properly to different educational systems
Screenshot: 12_different_systems.png
API Check: Verify GET /api/accounts/courses/?educational_system=brazil returns Brazil courses

=== PASS/FAIL CRITERIA ===

PASS: Course catalog displays with clear organization by education level and subject area AND visual hierarchy is logical AND browsing experience is intuitive
FAIL: Organization unclear OR visual hierarchy poor OR browsing confusing OR missing essential information

Individual Step Criteria:
- Step 1: PASS if catalog loads properly after system selection, FAIL if loading issues
- Step 2-5: PASS if all education levels clearly organized with appropriate subjects, FAIL if organization unclear
- Step 6-8: PASS if subject areas show logical progression across levels, FAIL if progression illogical
- Step 9: PASS if visual hierarchy clear and design professional, FAIL if design poor or confusing
- Step 10: PASS if navigation smooth and browsing intuitive, FAIL if navigation problems
- Step 11: PASS if course information comprehensive and consistent, FAIL if information inadequate
- Step 12: PASS if catalog adapts properly to different educational systems, FAIL if adaptation broken

GitHub Issue #44 Acceptance Criteria Validation:
✓ Course browsing interface organized by education level and subject area
✓ Logical grouping and clear visual hierarchy
✓ Intuitive course discovery with logical grouping
✓ Professional presentation suitable for tutoring context

User Experience Requirements:
- Organization should feel natural and intuitive to educators
- Visual hierarchy should guide users efficiently to relevant courses
- Information should be comprehensive but not overwhelming
- Browsing should feel professional and trustworthy

Performance Requirements:
- Course catalog should load within 3 seconds
- Navigation between sections should be smooth (<200ms)
- Scrolling should be responsive without lag
- API calls should be efficient (cached when appropriate)

Overall Result: PASS only if course catalog is clearly organized by education level and subject area with intuitive browsing experience, FAIL if organization is poor or browsing is confusing