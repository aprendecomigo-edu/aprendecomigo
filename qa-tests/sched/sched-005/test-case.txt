QA Test Case: Class Management Actions and Status Workflows

Test ID: SCHED-005
Test Name: Class Management Actions and Status Workflows
Purpose: Verify that class management actions (confirm, complete, cancel) work correctly and status updates properly
Expected Result: All class management actions work properly and status changes are reflected across all users

=== CONTEXT (Pre-test Requirements) ===

System Information:
- Project: Aprende Comigo - Educational platform
- Architecture: Django REST backend + React Native frontend
- Class Status Flow: Scheduled → Confirmed → Completed (or Cancelled)
- Management Actions: Confirm, Complete, Cancel classes
- User Permissions: Teachers and admins can manage classes

Test Data:
- Student Email: student.test@example.com
- Teacher Email: teacher.test@example.com
- Admin Email: admin.test@example.com
- Test Classes: Multiple classes in different statuses

=== DETAILED STEP-BY-STEP INSTRUCTIONS ===

Step 1: Environment Setup and Test Data Creation
Commands:
  cd /Users/anapmc/Code/aprendecomigo
  source .venv/bin/activate
  cd backend
  python manage.py runserver > /tmp/django_server.log 2>&1 &
  sleep 5
  cd ../frontend-ui
  npm run web:dev > /tmp/expo_output.log 2>&1 &
  sleep 15

Expected: Both servers start successfully
Screenshot: 01_servers_started.png

Step 2: Create Test Classes
1. Login as student: student.test@example.com
2. Create 3 classes:
   - Class 1: "Status Test - Confirm"
   - Class 2: "Status Test - Complete"
   - Class 3: "Status Test - Cancel"
3. Verify all classes created with "Scheduled" status

Expected: Three test classes created successfully
Screenshot: 02_test_classes_created.png

Step 3: Test Class Confirmation
1. Login as teacher: teacher.test@example.com
2. Navigate to calendar
3. Find "Status Test - Confirm" class
4. Click on class to view details
5. Click "Confirm" button
6. Verify success message appears

Expected: Class confirmation works successfully
Screenshot: 03_class_confirmed.png

Step 4: Verify Status Update
1. Check class details after confirmation
2. Verify status changed to "Confirmed"
3. Switch to student account
4. Verify student sees "Confirmed" status
5. Switch to admin account
6. Verify admin sees "Confirmed" status

Expected: Status update visible to all users
Screenshot: 04_status_updated_all_users.png

Step 5: Test Class Completion
1. Login as teacher
2. Find "Status Test - Complete" class
3. First confirm the class (if needed)
4. Then click "Complete" button
5. Verify success message appears

Expected: Class completion works successfully
Screenshot: 05_class_completed.png

Step 6: Test Class Cancellation
1. Find "Status Test - Cancel" class
2. Click "Cancel" button
3. Enter cancellation reason (if required)
4. Confirm cancellation
5. Verify success message appears

Expected: Class cancellation works successfully
Screenshot: 06_class_cancelled.png

Step 7: Test Admin Class Management
1. Login as admin: admin.test@example.com
2. Navigate to calendar
3. Find any scheduled class
4. Verify admin can perform all management actions:
   - Confirm class
   - Complete class
   - Cancel class
5. Test one action to verify it works

Expected: Admin has full class management capabilities
Screenshot: 07_admin_class_management.png

Step 8: Test Status Workflow Rules
1. Try to complete a class that's not confirmed
2. Verify appropriate validation/workflow rules
3. Test other invalid state transitions
4. Verify proper error messages

Expected: Status workflow rules are enforced
Screenshot: 08_workflow_rules.png

Step 9: Test Bulk Actions (if available)
1. Look for bulk action capabilities
2. Select multiple classes
3. Try bulk status updates
4. Verify bulk actions work correctly

Expected: Bulk actions work if available
Screenshot: 09_bulk_actions.png

Step 10: Backend Verification
Commands:
  cd /Users/anapmc/Code/aprendecomigo/backend
  python manage.py shell -c "
  from scheduler.models import ClassSchedule
  from accounts.models import CustomUser

  test_classes = ClassSchedule.objects.filter(title__contains='Status Test')
  print(f'Found {test_classes.count()} test classes')

  for cls in test_classes:
      print(f'Class: {cls.title}')
      print(f'Status: {cls.status}')
      print(f'Confirmed at: {cls.confirmed_at if hasattr(cls, \"confirmed_at\") else \"N/A\"}')
      print(f'Completed at: {cls.completed_at if hasattr(cls, \"completed_at\") else \"N/A\"}')
      print('---')
  "

Expected: Backend confirms all status changes
Screenshot: 10_backend_verification.png

=== PASS/FAIL CRITERIA ===

PASS: All class management actions work correctly AND status updates are visible to all users AND workflow rules are enforced AND error handling works properly

FAIL: Any management action fails OR status updates not visible OR workflow rules not enforced OR poor error handling

Overall Result: PASS only if ALL steps pass, FAIL if ANY step fails

=== SPECIAL CONSIDERATIONS ===

Class Status Workflow:
- Scheduled → Confirmed → Completed
- Scheduled → Cancelled
- Confirmed → Cancelled
- Proper timestamps for each status change

User Permissions:
- Teachers can manage classes they teach
- Admins can manage all classes
- Students cannot manage classes (view only)

Error Handling:
- Invalid state transitions blocked
- Clear error messages provided
- Graceful handling of edge cases
