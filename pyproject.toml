[project]
name = "aprendecomigo-backend"
version = "1.0.0"
description = "Aprende Comigo - Educational Platform Backend"
requires-python = ">=3.11"
readme = "README.md"

[tool.django]
settings_module = "aprendecomigo.settings.development"
test_runner = "django.test.runner.DiscoverRunner"

[tool.coverage.run]
source = ["."]
omit = [
    "*/.venv/*",
    "*/migrations/*",
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/settings/*",
    "manage.py",
    "*/wsgi.py",
    "*/asgi.py",
]
branch = true
parallel = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
skip_empty = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.ruff]
# Ruff is the primary linter for this project
# 
# HOW TO RUN LINTING:
# -------------------
# Check for issues:       ch django lint
# Auto-fix safe issues:   ch django lint --fix
# Format code:            ch django format
#
target-version = "py313"
line-length = 120
exclude = [
    ".venv",
    "migrations",
    "__pycache__",
    "*.pyc",
    ".git",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings  
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "DJ",    # flake8-django
    "RUF",   # Ruff-specific rules
    "SIM",   # flake8-simplify
    "UP",    # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise from None
    "DJ001", # avoid using null=True on string fields
    "RUF012", # Mutable class attributes should be annotated with ClassVar
]
# Additional rules to consider enabling:
# "N",     # pep8-naming
# "DTZ",   # flake8-datetimez
# "A",     # flake8-builtins
# "COM",   # flake8-commas
# "PT",    # flake8-pytest-style
# "Q",     # flake8-quotes
# "TCH",   # flake8-type-checking
# "ARG",   # flake8-unused-arguments
# "PTH",   # flake8-use-pathlib

[tool.ruff.lint.per-file-ignores]
# Test files can have different standards
"*/tests/*.py" = ["B", "E501", "F841", "RUF012", "SIM117", "F811", "SIM105", "F401"]  # Allow unused vars, long lines, nested with statements, and redefinitions in tests
"*/test_*.py" = ["B", "E501", "F841", "RUF012", "SIM117", "F811", "SIM105"]
"*/settings/*.py" = ["E501", "F405", "F403"]  # Settings can use star imports
"*/migrations/*.py" = ["E501", "F401", "RUF012"]  # Migrations are auto-generated
"aprendecomigo/asgi.py" = ["E402"]  # Django must be initialized before imports
"*/apps.py" = ["SIM105"]  # Allow try-except-pass for optional imports
"finances/urls.py" = ["E402"]  # app_name must be set before imports for Django
"finances/utils/pci_compliance.py" = ["SIM116"]  # Consecutive if statements are clearer here
"finances/views.py" = ["F402", "F811"]  # Allow shadowing and redefinition in complex views

[tool.ruff.lint.isort]
known-third-party = ["django", "rest_framework", "channels", "stripe"]
known-first-party = ["accounts", "classroom", "common", "finances", "messaging", "scheduler", "tasks"]
combine-as-imports = true
force-sort-within-sections = true

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_generics = false
ignore_missing_imports = true
follow_imports = "silent"
no_implicit_reexport = false
strict_optional = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

[tool.django-stubs]
django_settings_module = "aprendecomigo.settings.development"

[[tool.mypy.overrides]]
module = [
    "channels.*",
    "stripe.*",
    "django_cryptography.*"
]
ignore_missing_imports = true