{"type":"entity","name":"Django Admin Test Account","entityType":"test_credential","observations":["Email: admin@aprendecomigo.com","Password: admin123!","Role: Django superuser with full admin panel access","User ID: 1","Login URL: http://localhost:8000/admin/","Created: 2025-08-02 in clean development database","Can be tested with Playwright MCP browser automation","Login flow: navigate to http://localhost:8000/admin/, enter admin@aprendecomigo.com, admin123!","Useful for backend verification and admin panel testing via browser automation","Playwright can verify admin dashboard functionality and user management features"]}
{"type":"entity","name":"Ana Silva Tutor Test Account","entityType":"test_credential","observations":["Email: ana.silva@example.com","Password: tutorpass123","Phone: +351 912 345 678","User ID: 2, Username: ana.silva","Role: Individual Tutor (dual School Owner + Teacher permissions)","Practice Name: Ana Silva Tutoring","School ID: 1","Memberships: Owner (ID: 1) + Teacher (ID: 2)","Primary contact method: email","Created: 2025-08-02, verified multi-role system working","Perfect for Playwright testing of multi-role user flows","Can test dual School Owner + Teacher workflows via browser automation","Login at frontend (http://localhost:8081) with ana.silva@example.com, tutorpass123","Playwright can verify tutor onboarding, school management, and teaching features","Multi-role testing: verify both owner permissions and teacher capabilities"]}
{"type":"entity","name":"Development Environment Setup","entityType":"test_environment","observations":["Backend URL: http://localhost:8000","Frontend URL: http://localhost:8081","Database: Fresh SQLite with clean migrations","Status: All servers operational as of 2025-08-02","Ready for frontend authentication testing","Multi-role system verified working","Playwright MCP can test both URLs: backend (8000) and frontend (8081)","Use mcp__playwright__browser_navigate to access both environments","Fresh database ideal for clean Playwright test runs","Browser automation can verify cross-platform functionality (web focus)","Perfect setup for end-to-end testing workflows with clean data"]}
{"type":"entity","name":"Aprende Comigo Brand Colors","entityType":"brand_identity","observations":["Primary: Electric Blue (#0EA5E9), Deep Blue (#0284C7), Cyan Flash (#38BDF8)","Accent: Golden Orange (#F59E0B), Burnt Orange (#F97316), Neon Magenta (#D946EF)","Neutral: Light Gray (#F3F4F6)","Brand emphasizes modern aesthetics with premium feel","Updated August 2, 2025 - Version 1.0"]}
{"type":"entity","name":"Aprende Comigo Typography System","entityType":"brand_identity","observations":["Brand font: Kirang Haerang for logo and decorative text","Primary font: Work Sans for headlines and navigation","Body font: Poppins for content and descriptions","Mono font: SF Mono/Monaco for code and technical text","Supports gradient text treatments for key messaging"]}
{"type":"entity","name":"Aprende Comigo Design Philosophy","entityType":"brand_identity","observations":["Modern aesthetics with contemporary gradients and glass effects","Consistency across web, iOS, and Android platforms","Performance optimized for all devices","Accessibility focused with high contrast and clear hierarchy","Responsive design from mobile to desktop","Glassmorphism and gradient patterns as core visual language"]}
{"type":"entity","name":"Aprende Comigo Key Gradients","entityType":"brand_identity","observations":["Primary Gradient: linear-gradient(135deg, #f59e0b, #38bdf8) for brand elements","Accent Gradient: linear-gradient(135deg, #0ea5e9, #d946ef) for headlines","Page Background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 50%, #f1f5f9 100%)","Glass effects with backdrop-blur and rgba transparency","All patterns work identically across platforms"]}
{"type":"entity","name":"Aprende Comigo Cross-Platform Architecture","entityType":"deployment_info","observations":["Uses React Native platform-specific file extensions for deployment","File structure: index.tsx (fallback), index.web.tsx (web), index.native.tsx (iOS/Android)","Metro bundler automatically resolves platform-specific files","No runtime Platform.OS conditionals - resolved at build time","Backwards compatible with existing imports"]}
{"type":"entity","name":"Platform File Resolution System","entityType":"deployment_info","observations":["index.web.tsx used for web platforms automatically","index.native.tsx used for iOS and Android automatically","index.tsx serves as fallback with Platform.OS conditional","React Native built-in platform resolution system","No runtime performance impact from conditionals"]}
{"type":"entity","name":"Cross-Platform Component Pattern","entityType":"deployment_info","observations":["Common logic in [component]-common.tsx files","Web uses withStyleContext from Gluestack","Native uses withStyleContextAndStates from Gluestack","Shared types, utilities, and tva styles in common files","Progressive migration approach - convert incrementally"]}
{"type":"entity","name":"Priority Components for Platform Optimization","entityType":"deployment_info","observations":["High Priority: modal, toast, tooltip, popover, actionsheet","Medium Priority: select, menu, alert-dialog","Low Priority: basic UI components","Focus on components with significant platform behavior differences","Prioritize overlay behaviors and interaction patterns"]}
{"type":"entity","name":"Platform File Structure Rule","entityType":"deployment_info","observations":["Use index.web.tsx for web, index.native.tsx for mobile, index.tsx as fallback","Metro bundler automatically resolves correct file at build time","No runtime Platform.OS conditionals needed - resolved automatically","Structure: components/ui/[name]/ with platform-specific files"]}
{"type":"entity","name":"Common Logic Pattern","entityType":"deployment_info","observations":["Always create [component]-common.tsx for shared code","Include types, utilities, tva styles, and component creation helpers","Maximize code reuse between platforms","Export shared functions and interfaces from common file"]}
{"type":"entity","name":"Progressive Migration Approach","entityType":"deployment_info","observations":["Convert components incrementally, not all at once","Maintain API compatibility - no breaking changes for consumers","Keep fallback index.tsx for backwards compatibility","Test both platforms after each component conversion"]}
{"type":"relation","from":"Ana Silva Tutor Test Account","to":"Development Environment Setup","relationType":"tests_on"}
{"type":"relation","from":"Django Admin Test Account","to":"Development Environment Setup","relationType":"manages"}
{"type":"relation","from":"Ana Silva Tutor Test Account","to":"Django Admin Test Account","relationType":"created_by"}
{"type":"relation","from":"Aprende Comigo Brand Colors","to":"Aprende Comigo Key Gradients","relationType":"defines"}
{"type":"relation","from":"Aprende Comigo Design Philosophy","to":"Aprende Comigo Typography System","relationType":"guides"}
{"type":"relation","from":"Aprende Comigo Design Philosophy","to":"Aprende Comigo Brand Colors","relationType":"influences"}