# Generated by Django 4.2.7 on 2025-08-01 12:00

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('finances', '0007_add_session_tracking_fields'),
    ]

    operations = [
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_number', models.CharField(help_text='Unique receipt identifier', max_length=50, unique=True, verbose_name='receipt number')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Receipt amount in euros', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='amount')),
                ('generated_at', models.DateTimeField(auto_now_add=True, help_text='When the receipt was generated', verbose_name='generated at')),
                ('pdf_file', models.FileField(blank=True, help_text='Generated PDF receipt file', null=True, upload_to='receipts/%Y/%m/', verbose_name='PDF file')),
                ('is_valid', models.BooleanField(default=True, help_text='Whether this receipt is still valid', verbose_name='is valid')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional receipt data in JSON format', verbose_name='metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('student', models.ForeignKey(help_text='Student who received this receipt', on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to=settings.AUTH_USER_MODEL, verbose_name='student')),
                ('transaction', models.ForeignKey(help_text='Purchase transaction this receipt is for', on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to='finances.purchasetransaction', verbose_name='transaction')),
            ],
            options={
                'verbose_name': 'Receipt',
                'verbose_name_plural': 'Receipts',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='StoredPaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_payment_method_id', models.CharField(help_text='Stripe PaymentMethod ID for secure storage', max_length=255, unique=True, verbose_name='Stripe payment method ID')),
                ('card_brand', models.CharField(blank=True, help_text='Card brand (e.g., visa, mastercard)', max_length=20, verbose_name='card brand')),
                ('card_last4', models.CharField(blank=True, help_text='Last 4 digits of the card for display', max_length=4, verbose_name='card last 4 digits')),
                ('card_exp_month', models.PositiveSmallIntegerField(blank=True, help_text='Card expiration month (1-12)', null=True, verbose_name='card expiration month')),
                ('card_exp_year', models.PositiveIntegerField(blank=True, help_text='Card expiration year', null=True, verbose_name='card expiration year')),
                ('is_default', models.BooleanField(default=False, help_text='Whether this is the default payment method', verbose_name='is default')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this payment method is active', verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('student', models.ForeignKey(help_text='Student who owns this payment method', on_delete=django.db.models.deletion.CASCADE, related_name='stored_payment_methods', to=settings.AUTH_USER_MODEL, verbose_name='student')),
            ],
            options={
                'verbose_name': 'Stored Payment Method',
                'verbose_name_plural': 'Stored Payment Methods',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='receipt',
            index=models.Index(fields=['student', 'generated_at'], name='finances_re_student_2dd26d_idx'),
        ),
        migrations.AddIndex(
            model_name='receipt',
            index=models.Index(fields=['receipt_number'], name='finances_re_receipt_b7b1e4_idx'),
        ),
        migrations.AddIndex(
            model_name='receipt',
            index=models.Index(fields=['transaction'], name='finances_re_transac_c3e2fb_idx'),
        ),
        migrations.AddIndex(
            model_name='storedpaymentmethod',
            index=models.Index(fields=['student', 'is_active'], name='finances_st_student_39b59a_idx'),
        ),
        migrations.AddIndex(
            model_name='storedpaymentmethod',
            index=models.Index(fields=['stripe_payment_method_id'], name='finances_st_stripe__96ba8a_idx'),
        ),
        migrations.AddConstraint(
            model_name='storedpaymentmethod',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('student',), name='unique_default_payment_method_per_student'),
        ),
    ]