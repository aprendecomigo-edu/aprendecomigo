# Generated by Django 5.2 on 2025-08-01 19:15

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0031_add_parent_purchase_approval'),
        ('finances', '0011_add_stripe_customer_id_to_stored_payment_method'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PurchaseApprovalRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount of the purchase request', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='amount')),
                ('description', models.TextField(help_text='Description of what the student wants to purchase', verbose_name='description')),
                ('request_type', models.CharField(choices=[('hours', 'Hour Package'), ('session', 'Individual Session'), ('subscription', 'Subscription')], help_text='Type of purchase being requested', max_length=20, verbose_name='request type')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='pending', help_text='Current status of the approval request', max_length=20, verbose_name='status')),
                ('request_metadata', models.JSONField(blank=True, default=dict, help_text='Additional data about the purchase request', verbose_name='request metadata')),
                ('requested_at', models.DateTimeField(auto_now_add=True, help_text='When the request was made', verbose_name='requested at')),
                ('responded_at', models.DateTimeField(blank=True, help_text='When the parent responded to the request', null=True, verbose_name='responded at')),
                ('expires_at', models.DateTimeField(help_text='When this request expires if not responded to', verbose_name='expires at')),
                ('parent_notes', models.TextField(blank=True, help_text='Optional notes from the parent about their decision', verbose_name='parent notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_session', models.ForeignKey(blank=True, help_text='Class session being requested (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approval_requests', to='finances.classsession', verbose_name='class session')),
                ('parent', models.ForeignKey(help_text='Parent who needs to approve the purchase', on_delete=django.db.models.deletion.CASCADE, related_name='pending_approvals', to=settings.AUTH_USER_MODEL, verbose_name='parent')),
                ('parent_child_relationship', models.ForeignKey(help_text='The parent-child relationship this request is under', on_delete=django.db.models.deletion.CASCADE, related_name='purchase_requests', to='accounts.parentchildrelationship', verbose_name='parent-child relationship')),
                ('pricing_plan', models.ForeignKey(blank=True, help_text='Pricing plan being requested (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approval_requests', to='finances.pricingplan', verbose_name='pricing plan')),
                ('student', models.ForeignKey(help_text='Student requesting the purchase', on_delete=django.db.models.deletion.CASCADE, related_name='purchase_requests', to=settings.AUTH_USER_MODEL, verbose_name='student')),
            ],
            options={
                'verbose_name': 'Purchase Approval Request',
                'verbose_name_plural': 'Purchase Approval Requests',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.AddField(
            model_name='purchasetransaction',
            name='approval_request',
            field=models.ForeignKey(blank=True, help_text='Approval request that authorized this transaction (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_transactions', to='finances.purchaseapprovalrequest', verbose_name='approval request'),
        ),
        migrations.CreateModel(
            name='FamilyBudgetControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_budget_limit', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum amount child can spend per month (null for no limit)', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='monthly budget limit')),
                ('weekly_budget_limit', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum amount child can spend per week (null for no limit)', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='weekly budget limit')),
                ('auto_approval_threshold', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Maximum amount that can be automatically approved without parent intervention', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='auto approval threshold')),
                ('require_approval_for_sessions', models.BooleanField(default=True, help_text='Whether parent approval is required for booking individual sessions', verbose_name='require approval for sessions')),
                ('require_approval_for_packages', models.BooleanField(default=True, help_text='Whether parent approval is required for purchasing hour packages', verbose_name='require approval for packages')),
                ('is_active', models.BooleanField(default=True, help_text='Whether budget controls are currently active', verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_child_relationship', models.OneToOneField(help_text='The parent-child relationship this budget control applies to', on_delete=django.db.models.deletion.CASCADE, related_name='budget_control', to='accounts.parentchildrelationship', verbose_name='parent-child relationship')),
            ],
            options={
                'verbose_name': 'Family Budget Control',
                'verbose_name_plural': 'Family Budget Controls',
                'indexes': [models.Index(fields=['parent_child_relationship', 'is_active'], name='finances_fa_parent__285adc_idx'), models.Index(fields=['auto_approval_threshold'], name='finances_fa_auto_ap_4abf96_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='purchaseapprovalrequest',
            index=models.Index(fields=['student', 'status', '-requested_at'], name='finances_pu_student_70e614_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseapprovalrequest',
            index=models.Index(fields=['parent', 'status', '-requested_at'], name='finances_pu_parent__fe52d5_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseapprovalrequest',
            index=models.Index(fields=['parent_child_relationship', '-requested_at'], name='finances_pu_parent__04c2a5_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseapprovalrequest',
            index=models.Index(fields=['status', 'expires_at'], name='finances_pu_status_42041c_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseapprovalrequest',
            index=models.Index(fields=['request_type', 'status'], name='finances_pu_request_9c1c86_idx'),
        ),
    ]
