QA Test Case: School Metrics Display

Test ID: DASH-002
Test Name: School Metrics API and Display Test
Purpose: Verify that school metrics API returns proper data and displays correctly in the dashboard
Expected Result: All metrics cards show accurate data from the backend APIs

=== CONTEXT (Pre-test Requirements) ===

System Information:
- Project: Aprende Comigo EdTech Platform
- Backend API Endpoints: /api/v1/schools/dashboard/metrics/
- Test Environment: Local development with authenticated user

Required Environment Setup:
1. Project Location: /Users/anapmc/Code/aprendecomigo/backend
2. Development servers running: `make dev`
3. Authenticated user session from DASH-001

Test Data:
- Test Email: test.manager@example.com (already authenticated)
- Expected Metrics: Student count, teacher count, active sessions, revenue data

=== DETAILED STEP-BY-STEP INSTRUCTIONS ===

Step 1: Navigate to Dashboard
1. Ensure user is authenticated and on dashboard page
2. Navigate to http://localhost:8081/dashboard if not already there

Expected: Dashboard loads with authenticated session
Screenshot: 01_dashboard_loaded.png

Step 2: Verify Metrics API Response
1. Open browser developer tools (F12)
2. Go to Network tab
3. Refresh dashboard page
4. Look for API calls to /api/v1/schools/dashboard/metrics/
5. Check response status and data structure

Expected: API returns 200 status with proper JSON data structure
Screenshot: 02_api_response.png

Step 3: Verify Metrics Cards Display
1. Locate metrics cards/widgets on dashboard
2. Check that each metric shows:
   - Student count (number)
   - Teacher count (number)  
   - Active sessions (number)
   - Revenue/financial data (if applicable)
3. Verify numbers are realistic (not 0, null, or error states)

Expected: All metrics display proper numerical values
Screenshot: 03_metrics_cards.png

Step 4: Check Metrics Formatting
1. Verify numbers are properly formatted
2. Check for appropriate labels and units
3. Ensure no "undefined" or "NaN" values
4. Verify proper loading states vs. actual data

Expected: All metrics are properly formatted with labels
Screenshot: 04_metrics_formatting.png

Step 5: Test Metrics Refresh
1. Force refresh the metrics (if refresh button available)
2. Or reload the page and observe metrics loading
3. Verify metrics update correctly

Expected: Metrics refresh and display updated data
Screenshot: 05_metrics_refresh.png

=== PASS/FAIL CRITERIA ===

PASS: All metrics API calls successful AND all metrics display proper data AND formatting is correct
FAIL: Any API call fails OR any metric shows error/null/undefined OR formatting issues

Individual Step Criteria:
- Step 1: PASS if dashboard accessible, FAIL if authentication or access issues
- Step 2: PASS if API returns 200 with valid JSON, FAIL if 404/500/error or invalid data
- Step 3: PASS if all expected metrics display numbers, FAIL if any missing or error states
- Step 4: PASS if formatting is proper with labels, FAIL if undefined/NaN or poor formatting
- Step 5: PASS if metrics refresh correctly, FAIL if refresh fails or shows stale data

Overall Result: PASS only if ALL steps pass, FAIL if ANY step fails