# Generated by Django 5.2 on 2025-08-07 08:25

import datetime
from django.db import migrations, models


def create_default_educational_systems(apps, schema_editor):
    """Create default educational systems that are referenced by default in models"""
    EducationalSystem = apps.get_model('accounts', 'EducationalSystem')
    
    # Create default educational systems
    default_systems = [
        {
            'id': 1,
            'name': 'Portugal',
            'code': 'pt',
            'description': 'Portuguese educational system',
            'is_active': True,
        },
        {
            'id': 2,
            'name': 'Brazil',
            'code': 'br',
            'description': 'Brazilian educational system',
            'is_active': True,
        },
        {
            'id': 3,
            'name': 'Custom',
            'code': 'custom',
            'description': 'Custom educational system for schools with non-standard curricula',
            'is_active': True,
        }
    ]
    
    for system_data in default_systems:
        EducationalSystem.objects.get_or_create(
            id=system_data['id'],
            defaults={
                'name': system_data['name'],
                'code': system_data['code'],
                'description': system_data['description'],
                'is_active': system_data['is_active'],
            }
        )


def reverse_create_default_educational_systems(apps, schema_editor):
    """Remove the default educational systems"""
    EducationalSystem = apps.get_model('accounts', 'EducationalSystem')
    EducationalSystem.objects.filter(id__in=[1, 2, 3]).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0002_initial'),
    ]

    operations = [
        # First create the default educational systems data
        migrations.RunPython(
            create_default_educational_systems,
            reverse_create_default_educational_systems
        ),
        # Then update the constraint
        migrations.RemoveConstraint(
            model_name='teacherinvitation',
            name='unique_active_teacher_invitation_per_school',
        ),
        migrations.AddConstraint(
            model_name='teacherinvitation',
            constraint=models.UniqueConstraint(condition=models.Q(('expires_at__gt', datetime.datetime(2025, 8, 7, 8, 25, 38, 197855, tzinfo=datetime.timezone.utc)), ('is_accepted', False), ('status__in', ['pending', 'sent', 'delivered', 'viewed'])), fields=('email', 'school'), name='unique_active_teacher_invitation_per_school'),
        ),
    ]
