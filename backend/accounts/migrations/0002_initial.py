# Generated by Django 4.2.15 on 2025-08-07 08:18

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('finances', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='schoolactivity',
            name='target_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finances.classsession'),
        ),
        migrations.AddField(
            model_name='schoolactivity',
            name='target_invitation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.schoolinvitation'),
        ),
        migrations.AddField(
            model_name='schoolactivity',
            name='target_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities_targeted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='progressassessment',
            name='student_progress',
            field=models.ForeignKey(help_text='Progress record this assessment belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='accounts.studentprogress', verbose_name='student progress'),
        ),
        migrations.AddField(
            model_name='parentprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='parent_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='parentchildrelationship',
            name='child',
            field=models.ForeignKey(help_text='Child user whose account is managed by the parent', on_delete=django.db.models.deletion.CASCADE, related_name='parent_relationships', to=settings.AUTH_USER_MODEL, verbose_name='child'),
        ),
        migrations.AddField(
            model_name='parentchildrelationship',
            name='parent',
            field=models.ForeignKey(help_text='Parent user who manages the child account', on_delete=django.db.models.deletion.CASCADE, related_name='children_relationships', to=settings.AUTH_USER_MODEL, verbose_name='parent'),
        ),
        migrations.AddField(
            model_name='parentchildrelationship',
            name='school',
            field=models.ForeignKey(help_text='School where this relationship is established', on_delete=django.db.models.deletion.CASCADE, to='accounts.school', verbose_name='school'),
        ),
        migrations.AddField(
            model_name='course',
            name='educational_system',
            field=models.ForeignKey(help_text='Educational system this course belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='accounts.educationalsystem'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='teacherprofile',
            index=models.Index(fields=['profile_completion_score'], name='accounts_te_profile_66b0d3_idx'),
        ),
        migrations.AddIndex(
            model_name='teacherprofile',
            index=models.Index(fields=['is_profile_complete'], name='accounts_te_is_prof_f392a7_idx'),
        ),
        migrations.AddIndex(
            model_name='teacherprofile',
            index=models.Index(fields=['last_profile_update'], name='accounts_te_last_pr_e9feb6_idx'),
        ),
        migrations.AddIndex(
            model_name='teacherprofile',
            index=models.Index(fields=['last_activity'], name='accounts_te_last_ac_156d12_idx'),
        ),
        migrations.AddIndex(
            model_name='teacherprofile',
            index=models.Index(fields=['specialty'], name='accounts_te_special_67ff46_idx'),
        ),
        migrations.AddIndex(
            model_name='teacherprofile',
            index=models.Index(fields=['hourly_rate'], name='accounts_te_hourly__9a19a0_idx'),
        ),
        migrations.AddIndex(
            model_name='teacherprofile',
            index=models.Index(fields=['is_profile_complete', '-profile_completion_score'], name='accounts_te_is_prof_929d56_idx'),
        ),
        migrations.AddIndex(
            model_name='teacherprofile',
            index=models.Index(fields=['is_profile_complete', 'hourly_rate'], name='accounts_te_is_prof_98b8fe_idx'),
        ),
        migrations.AddIndex(
            model_name='teacherinvitation',
            index=models.Index(fields=['school', 'status', '-created_at'], name='accounts_te_school__92f957_idx'),
        ),
        migrations.AddIndex(
            model_name='teacherinvitation',
            index=models.Index(fields=['batch_id', '-created_at'], name='accounts_te_batch_i_206901_idx'),
        ),
        migrations.AddIndex(
            model_name='teacherinvitation',
            index=models.Index(fields=['email', 'school', 'is_accepted'], name='accounts_te_email_1bae7a_idx'),
        ),
        migrations.AddIndex(
            model_name='teacherinvitation',
            index=models.Index(fields=['token'], name='accounts_te_token_7c3b8f_idx'),
        ),
        migrations.AddIndex(
            model_name='teacherinvitation',
            index=models.Index(fields=['expires_at', 'is_accepted'], name='accounts_te_expires_445f20_idx'),
        ),
        migrations.AddIndex(
            model_name='teacherinvitation',
            index=models.Index(fields=['email_delivery_status', 'retry_count'], name='accounts_te_email_d_35fa71_idx'),
        ),
        migrations.AddConstraint(
            model_name='teacherinvitation',
            constraint=models.UniqueConstraint(condition=models.Q(('expires_at__gt', datetime.datetime(2025, 8, 7, 8, 18, 23, 475646, tzinfo=datetime.timezone.utc)), ('is_accepted', False), ('status__in', ['pending', 'sent', 'delivered', 'viewed'])), fields=('email', 'school'), name='unique_active_teacher_invitation_per_school'),
        ),
        migrations.AddIndex(
            model_name='teachercourse',
            index=models.Index(fields=['hourly_rate'], name='accounts_te_hourly__c3061c_idx'),
        ),
        migrations.AddIndex(
            model_name='teachercourse',
            index=models.Index(fields=['is_active', 'hourly_rate'], name='accounts_te_is_acti_8eb952_idx'),
        ),
        migrations.AddIndex(
            model_name='teachercourse',
            index=models.Index(fields=['course', 'is_active'], name='accounts_te_course__42098d_idx'),
        ),
        migrations.AddIndex(
            model_name='teachercourse',
            index=models.Index(fields=['teacher', 'is_active'], name='accounts_te_teacher_f9bf5e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='teachercourse',
            unique_together={('teacher', 'course')},
        ),
        migrations.AddIndex(
            model_name='studentprogress',
            index=models.Index(fields=['student', 'course'], name='accounts_st_student_c3cfb7_idx'),
        ),
        migrations.AddIndex(
            model_name='studentprogress',
            index=models.Index(fields=['teacher', '-updated_at'], name='accounts_st_teacher_99c5b0_idx'),
        ),
        migrations.AddIndex(
            model_name='studentprogress',
            index=models.Index(fields=['school', 'course'], name='accounts_st_school__8f60be_idx'),
        ),
        migrations.AddIndex(
            model_name='studentprogress',
            index=models.Index(fields=['completion_percentage'], name='accounts_st_complet_91605f_idx'),
        ),
        migrations.AddIndex(
            model_name='studentprogress',
            index=models.Index(fields=['current_level'], name='accounts_st_current_168bda_idx'),
        ),
        migrations.AddConstraint(
            model_name='studentprogress',
            constraint=models.UniqueConstraint(fields=('student', 'teacher', 'course'), name='unique_student_teacher_course_progress'),
        ),
        migrations.AddIndex(
            model_name='schoolsettings',
            index=models.Index(fields=['school'], name='accounts_sc_school__c9d7fb_idx'),
        ),
        migrations.AddIndex(
            model_name='schoolsettings',
            index=models.Index(fields=['educational_system'], name='accounts_sc_educati_795fdd_idx'),
        ),
        migrations.AddIndex(
            model_name='schoolsettings',
            index=models.Index(fields=['language'], name='accounts_sc_languag_48f62c_idx'),
        ),
        migrations.AddIndex(
            model_name='schoolsettings',
            index=models.Index(fields=['timezone'], name='accounts_sc_timezon_5b4855_idx'),
        ),
        migrations.AddIndex(
            model_name='schoolmembership',
            index=models.Index(fields=['school', 'role', 'is_active'], name='accounts_sc_school__05ee6d_idx'),
        ),
        migrations.AddIndex(
            model_name='schoolmembership',
            index=models.Index(fields=['school', 'joined_at'], name='accounts_sc_school__f1da9a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='schoolmembership',
            unique_together={('user', 'school', 'role')},
        ),
        migrations.AlterUniqueTogether(
            name='schoolinvitationlink',
            unique_together={('school', 'role')},
        ),
        migrations.AddIndex(
            model_name='schoolactivity',
            index=models.Index(fields=['school', '-timestamp'], name='accounts_sc_school__0e0c1a_idx'),
        ),
        migrations.AddIndex(
            model_name='schoolactivity',
            index=models.Index(fields=['school', 'activity_type', '-timestamp'], name='accounts_sc_school__727125_idx'),
        ),
        migrations.AddIndex(
            model_name='schoolactivity',
            index=models.Index(fields=['actor', '-timestamp'], name='accounts_sc_actor_i_04515d_idx'),
        ),
        migrations.AddIndex(
            model_name='progressassessment',
            index=models.Index(fields=['student_progress', '-assessment_date'], name='accounts_pr_student_b4c179_idx'),
        ),
        migrations.AddIndex(
            model_name='progressassessment',
            index=models.Index(fields=['assessment_type', '-assessment_date'], name='accounts_pr_assessm_6a53d6_idx'),
        ),
        migrations.AddIndex(
            model_name='progressassessment',
            index=models.Index(fields=['is_graded', '-assessment_date'], name='accounts_pr_is_grad_096ae1_idx'),
        ),
        migrations.AddIndex(
            model_name='progressassessment',
            index=models.Index(fields=['assessment_date'], name='accounts_pr_assessm_33867a_idx'),
        ),
        migrations.AddIndex(
            model_name='parentprofile',
            index=models.Index(fields=['created_at'], name='accounts_pa_created_e86c32_idx'),
        ),
        migrations.AddIndex(
            model_name='parentprofile',
            index=models.Index(fields=['email_notifications_enabled'], name='accounts_pa_email_n_1bc43b_idx'),
        ),
        migrations.AddIndex(
            model_name='parentchildrelationship',
            index=models.Index(fields=['parent', 'is_active'], name='accounts_pa_parent__8eb724_idx'),
        ),
        migrations.AddIndex(
            model_name='parentchildrelationship',
            index=models.Index(fields=['child', 'is_active'], name='accounts_pa_child_i_02dd2c_idx'),
        ),
        migrations.AddIndex(
            model_name='parentchildrelationship',
            index=models.Index(fields=['school', 'is_active'], name='accounts_pa_school__f500a3_idx'),
        ),
        migrations.AddIndex(
            model_name='parentchildrelationship',
            index=models.Index(fields=['relationship_type'], name='accounts_pa_relatio_4f3c8e_idx'),
        ),
        migrations.AddConstraint(
            model_name='parentchildrelationship',
            constraint=models.CheckConstraint(check=models.Q(('parent', models.F('child')), _negated=True), name='parent_cannot_be_child'),
        ),
        migrations.AlterUniqueTogether(
            name='parentchildrelationship',
            unique_together={('parent', 'child', 'school')},
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('code', 'educational_system')},
        ),
    ]
