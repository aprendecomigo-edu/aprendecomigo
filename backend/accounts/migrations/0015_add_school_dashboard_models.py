# Generated by Django 5.2 on 2025-07-27 22:23

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0014_add_first_login_completed'),
        ('finances', '0006_fix_hour_consumption_group_sessions'),
    ]

    operations = [
        migrations.CreateModel(
            name='SchoolActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('invitation_sent', 'Invitation Sent'), ('invitation_accepted', 'Invitation Accepted'), ('invitation_declined', 'Invitation Declined'), ('student_joined', 'Student Joined'), ('teacher_joined', 'Teacher Joined'), ('class_created', 'Class Created'), ('class_completed', 'Class Completed'), ('class_cancelled', 'Class Cancelled')], max_length=30)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('description', models.TextField()),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SchoolSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trial_cost_absorption', models.CharField(choices=[('school', 'School'), ('teacher', 'Teacher'), ('split', 'Split')], default='school', max_length=20)),
                ('default_session_duration', models.PositiveIntegerField(default=60, help_text='Default session duration in minutes')),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('dashboard_refresh_interval', models.PositiveIntegerField(default=30, help_text='Dashboard refresh interval in seconds')),
                ('activity_retention_days', models.PositiveIntegerField(default=90, help_text='Days to retain activity logs')),
            ],
        ),
        migrations.AddIndex(
            model_name='schoolmembership',
            index=models.Index(fields=['school', 'role', 'is_active'], name='accounts_sc_school__05ee6d_idx'),
        ),
        migrations.AddIndex(
            model_name='schoolmembership',
            index=models.Index(fields=['school', 'joined_at'], name='accounts_sc_school__f1da9a_idx'),
        ),
        migrations.AddField(
            model_name='schoolactivity',
            name='actor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities_performed', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='schoolactivity',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='accounts.school'),
        ),
        migrations.AddField(
            model_name='schoolactivity',
            name='target_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finances.classsession'),
        ),
        migrations.AddField(
            model_name='schoolactivity',
            name='target_invitation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.schoolinvitation'),
        ),
        migrations.AddField(
            model_name='schoolactivity',
            name='target_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities_targeted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='schoolsettings',
            name='school',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='accounts.school'),
        ),
        migrations.AddIndex(
            model_name='schoolactivity',
            index=models.Index(fields=['school', '-timestamp'], name='accounts_sc_school__0e0c1a_idx'),
        ),
        migrations.AddIndex(
            model_name='schoolactivity',
            index=models.Index(fields=['school', 'activity_type', '-timestamp'], name='accounts_sc_school__727125_idx'),
        ),
        migrations.AddIndex(
            model_name='schoolactivity',
            index=models.Index(fields=['actor', '-timestamp'], name='accounts_sc_actor_i_04515d_idx'),
        ),
    ]
