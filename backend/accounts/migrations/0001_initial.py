# Generated by Django 5.2 on 2025-04-03 16:27

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(blank=True, max_length=150, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(blank=True, max_length=150, verbose_name="last name"),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=150, null=True, verbose_name="username"
                    ),
                ),
                (
                    "email",
                    models.EmailField(max_length=254, unique=True, verbose_name="email address"),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, verbose_name="phone number"),
                ),
                ("is_admin", models.BooleanField(default=False)),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("teacher", "Teacher"),
                            ("student", "Student"),
                            ("parent", "Parent"),
                        ],
                        default="admin",
                        max_length=20,
                        verbose_name="user type",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "school_year",
                    models.CharField(max_length=50, verbose_name="school year"),
                ),
                ("birth_date", models.DateField(verbose_name="birth date")),
                (
                    "address",
                    models.TextField(
                        help_text="Street, number, postal code and location",
                        verbose_name="address",
                    ),
                ),
                (
                    "cc_number",
                    models.CharField(blank=True, max_length=20, verbose_name="CC number"),
                ),
                (
                    "cc_photo",
                    models.ImageField(
                        blank=True,
                        help_text="Photo of CC front and back (only for in-person students)",
                        null=True,
                        upload_to="cc_photos/",
                        verbose_name="CC photo",
                    ),
                ),
                (
                    "calendar_iframe",
                    models.TextField(blank=True, verbose_name="calendar iframe"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="Teacher's professional biography",
                        verbose_name="biography",
                    ),
                ),
                (
                    "specialty",
                    models.CharField(blank=True, max_length=100, verbose_name="specialty"),
                ),
                (
                    "education",
                    models.TextField(
                        blank=True,
                        help_text="Educational background and qualifications",
                        verbose_name="education",
                    ),
                ),
                (
                    "hourly_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        verbose_name="hourly rate",
                    ),
                ),
                (
                    "availability",
                    models.TextField(
                        blank=True,
                        help_text="Available days and times for lessons",
                        verbose_name="availability",
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        blank=True,
                        help_text="Street, number, postal code and location",
                        verbose_name="address",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, verbose_name="teacher phone"),
                ),
                (
                    "calendar_iframe",
                    models.TextField(blank=True, verbose_name="calendar iframe"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
