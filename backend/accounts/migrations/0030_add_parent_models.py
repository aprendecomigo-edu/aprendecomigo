# Generated by Django 5.2 on 2025-08-01 19:15

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0029_remove_teacherinvitation_unique_active_teacher_invitation_per_school_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ParentChildRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_type', models.CharField(choices=[('parent', 'Parent'), ('guardian', 'Guardian'), ('other', 'Other')], default='parent', help_text='Type of relationship (parent, guardian, etc.)', max_length=20, verbose_name='relationship type')),
                ('permissions', models.JSONField(blank=True, default=dict, help_text='Specific permissions the parent has for this child', verbose_name='permissions')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this relationship is currently active', verbose_name='is active')),
                ('requires_purchase_approval', models.BooleanField(default=True, help_text='Whether parent approval is required for purchases', verbose_name='requires purchase approval')),
                ('requires_session_approval', models.BooleanField(default=True, help_text='Whether parent approval is required for booking sessions', verbose_name='requires session approval')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Parent-Child Relationship',
                'verbose_name_plural': 'Parent-Child Relationships',
            },
        ),
        migrations.CreateModel(
            name='ParentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_preferences', models.JSONField(blank=True, default=dict, help_text='Parent notification preferences (email, SMS, in-app)', verbose_name='notification preferences')),
                ('default_approval_settings', models.JSONField(blank=True, default=dict, help_text='Default purchase approval settings for all children', verbose_name='default approval settings')),
                ('email_notifications_enabled', models.BooleanField(default=True, help_text='Enable email notifications for parent alerts', verbose_name='email notifications enabled')),
                ('sms_notifications_enabled', models.BooleanField(default=False, help_text='Enable SMS notifications for parent alerts', verbose_name='SMS notifications enabled')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Parent Profile',
                'verbose_name_plural': 'Parent Profiles',
            },
        ),
        migrations.RemoveConstraint(
            model_name='teacherinvitation',
            name='unique_active_teacher_invitation_per_school',
        ),
        migrations.AlterField(
            model_name='schoolinvitation',
            name='role',
            field=models.CharField(choices=[('school_owner', 'School Owner'), ('school_admin', 'School Administrator'), ('teacher', 'Teacher'), ('school_staff', 'School Staff'), ('student', 'Student'), ('parent', 'Parent')], max_length=20, verbose_name='role'),
        ),
        migrations.AlterField(
            model_name='schoolinvitationlink',
            name='role',
            field=models.CharField(choices=[('school_owner', 'School Owner'), ('school_admin', 'School Administrator'), ('teacher', 'Teacher'), ('school_staff', 'School Staff'), ('student', 'Student'), ('parent', 'Parent')], max_length=20, verbose_name='role'),
        ),
        migrations.AlterField(
            model_name='schoolmembership',
            name='role',
            field=models.CharField(choices=[('school_owner', 'School Owner'), ('school_admin', 'School Administrator'), ('teacher', 'Teacher'), ('school_staff', 'School Staff'), ('student', 'Student'), ('parent', 'Parent')], max_length=20, verbose_name='role'),
        ),
        migrations.AlterField(
            model_name='teacherinvitation',
            name='role',
            field=models.CharField(choices=[('school_owner', 'School Owner'), ('school_admin', 'School Administrator'), ('teacher', 'Teacher'), ('school_staff', 'School Staff'), ('student', 'Student'), ('parent', 'Parent')], default='teacher', max_length=20, verbose_name='role'),
        ),
        migrations.AddConstraint(
            model_name='teacherinvitation',
            constraint=models.UniqueConstraint(condition=models.Q(('expires_at__gt', datetime.datetime(2025, 8, 1, 19, 15, 25, 148688, tzinfo=datetime.timezone.utc)), ('is_accepted', False), ('status__in', ['pending', 'sent', 'delivered', 'viewed'])), fields=('email', 'school'), name='unique_active_teacher_invitation_per_school'),
        ),
        migrations.AddField(
            model_name='parentchildrelationship',
            name='child',
            field=models.ForeignKey(help_text='Child user whose account is managed by the parent', on_delete=django.db.models.deletion.CASCADE, related_name='parent_relationships', to=settings.AUTH_USER_MODEL, verbose_name='child'),
        ),
        migrations.AddField(
            model_name='parentchildrelationship',
            name='parent',
            field=models.ForeignKey(help_text='Parent user who manages the child account', on_delete=django.db.models.deletion.CASCADE, related_name='children_relationships', to=settings.AUTH_USER_MODEL, verbose_name='parent'),
        ),
        migrations.AddField(
            model_name='parentchildrelationship',
            name='school',
            field=models.ForeignKey(help_text='School where this relationship is established', on_delete=django.db.models.deletion.CASCADE, to='accounts.school', verbose_name='school'),
        ),
        migrations.AddField(
            model_name='parentprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='parent_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='parentchildrelationship',
            index=models.Index(fields=['parent', 'is_active'], name='accounts_pa_parent__8eb724_idx'),
        ),
        migrations.AddIndex(
            model_name='parentchildrelationship',
            index=models.Index(fields=['child', 'is_active'], name='accounts_pa_child_i_02dd2c_idx'),
        ),
        migrations.AddIndex(
            model_name='parentchildrelationship',
            index=models.Index(fields=['school', 'is_active'], name='accounts_pa_school__f500a3_idx'),
        ),
        migrations.AddIndex(
            model_name='parentchildrelationship',
            index=models.Index(fields=['relationship_type'], name='accounts_pa_relatio_4f3c8e_idx'),
        ),
        migrations.AddConstraint(
            model_name='parentchildrelationship',
            constraint=models.CheckConstraint(condition=models.Q(('parent', models.F('child')), _negated=True), name='parent_cannot_be_child'),
        ),
        migrations.AlterUniqueTogether(
            name='parentchildrelationship',
            unique_together={('parent', 'child', 'school')},
        ),
        migrations.AddIndex(
            model_name='parentprofile',
            index=models.Index(fields=['created_at'], name='accounts_pa_created_e86c32_idx'),
        ),
        migrations.AddIndex(
            model_name='parentprofile',
            index=models.Index(fields=['email_notifications_enabled'], name='accounts_pa_email_n_1bc43b_idx'),
        ),
    ]
