# Generated by Django 5.2 on 2025-07-28 04:28

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0016_add_settings_updated_activity_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='TeacherInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('role', models.CharField(choices=[('school_owner', 'School Owner'), ('school_admin', 'School Administrator'), ('teacher', 'Teacher'), ('school_staff', 'School Staff'), ('student', 'Student')], default='teacher', max_length=20, verbose_name='role')),
                ('custom_message', models.TextField(blank=True, help_text='Personal message to include in the invitation', max_length=1000, null=True, verbose_name='custom message')),
                ('batch_id', models.UUIDField(help_text='UUID to group related invitations together', verbose_name='batch ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('viewed', 'Viewed'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='status')),
                ('email_delivery_status', models.CharField(choices=[('not_sent', 'Not Sent'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('bounced', 'Bounced')], default='not_sent', max_length=20, verbose_name='email delivery status')),
                ('email_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='email sent at')),
                ('email_delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='email delivered at')),
                ('email_failure_reason', models.TextField(blank=True, null=True, verbose_name='email failure reason')),
                ('retry_count', models.PositiveSmallIntegerField(default=0, verbose_name='retry count')),
                ('max_retries', models.PositiveSmallIntegerField(default=3, verbose_name='max retries')),
                ('token', models.CharField(max_length=64, unique=True, verbose_name='token')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField()),
                ('is_accepted', models.BooleanField(default=False, verbose_name='is accepted')),
                ('accepted_at', models.DateTimeField(blank=True, null=True, verbose_name='accepted at')),
                ('viewed_at', models.DateTimeField(blank=True, help_text='When the invitation was first viewed', null=True, verbose_name='viewed at')),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_teacher_invitations', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_invitations', to='accounts.school')),
            ],
            options={
                'verbose_name': 'Teacher Invitation',
                'verbose_name_plural': 'Teacher Invitations',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['school', 'status', '-created_at'], name='accounts_te_school__92f957_idx'), models.Index(fields=['batch_id', '-created_at'], name='accounts_te_batch_i_206901_idx'), models.Index(fields=['email', 'school', 'is_accepted'], name='accounts_te_email_1bae7a_idx'), models.Index(fields=['token'], name='accounts_te_token_7c3b8f_idx'), models.Index(fields=['expires_at', 'is_accepted'], name='accounts_te_expires_445f20_idx'), models.Index(fields=['email_delivery_status', 'retry_count'], name='accounts_te_email_d_35fa71_idx')],
                'constraints': [models.UniqueConstraint(condition=models.Q(('expires_at__gt', datetime.datetime(2025, 7, 28, 4, 28, 58, 173275, tzinfo=datetime.timezone.utc)), ('is_accepted', False), ('status__in', ['pending', 'sent', 'delivered', 'viewed'])), fields=('email', 'school'), name='unique_active_teacher_invitation_per_school')],
            },
        ),
    ]
