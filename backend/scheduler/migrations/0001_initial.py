# Generated by Django 5.2 on 2025-07-05 08:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accounts", "0013_convert_to_enumeration_types"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="RecurringClassSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("description", models.TextField(blank=True, verbose_name="description")),
                (
                    "class_type",
                    models.CharField(
                        choices=[
                            ("individual", "Individual"),
                            ("group", "Group"),
                            ("trial", "Trial"),
                        ],
                        default="individual",
                        max_length=20,
                        verbose_name="class type",
                    ),
                ),
                (
                    "day_of_week",
                    models.CharField(
                        choices=[
                            ("monday", "Monday"),
                            ("tuesday", "Tuesday"),
                            ("wednesday", "Wednesday"),
                            ("thursday", "Thursday"),
                            ("friday", "Friday"),
                            ("saturday", "Saturday"),
                            ("sunday", "Sunday"),
                        ],
                        max_length=10,
                        verbose_name="day of week",
                    ),
                ),
                ("start_time", models.TimeField(verbose_name="start time")),
                ("end_time", models.TimeField(verbose_name="end time")),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(verbose_name="duration in minutes"),
                ),
                ("start_date", models.DateField(verbose_name="start date")),
                ("end_date", models.DateField(blank=True, null=True, verbose_name="end date")),
                ("is_active", models.BooleanField(default=True, verbose_name="is active")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_recurring_schedules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recurring_schedules",
                        to="accounts.school",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recurring_schedules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recurring_schedules",
                        to="accounts.teacherprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["day_of_week", "start_time"],
            },
        ),
        migrations.CreateModel(
            name="ClassSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("description", models.TextField(blank=True, verbose_name="description")),
                (
                    "class_type",
                    models.CharField(
                        choices=[
                            ("individual", "Individual"),
                            ("group", "Group"),
                            ("trial", "Trial"),
                        ],
                        default="individual",
                        max_length=20,
                        verbose_name="class type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("confirmed", "Confirmed"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("no_show", "No Show"),
                        ],
                        default="scheduled",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                ("scheduled_date", models.DateField(verbose_name="scheduled date")),
                ("start_time", models.TimeField(verbose_name="start time")),
                ("end_time", models.TimeField(verbose_name="end time")),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(verbose_name="duration in minutes"),
                ),
                ("booked_at", models.DateTimeField(auto_now_add=True, verbose_name="booked at")),
                (
                    "cancelled_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="cancelled at"),
                ),
                (
                    "cancellation_reason",
                    models.TextField(blank=True, verbose_name="cancellation reason"),
                ),
                (
                    "completed_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="completed at"),
                ),
                ("teacher_notes", models.TextField(blank=True, verbose_name="teacher notes")),
                ("student_notes", models.TextField(blank=True, verbose_name="student notes")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "additional_students",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Additional students for group classes",
                        related_name="group_classes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "booked_by",
                    models.ForeignKey(
                        help_text="User who booked this class",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="booked_classes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="class_schedules",
                        to="accounts.school",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        help_text="Student participating in this class",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scheduled_classes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scheduled_classes",
                        to="accounts.teacherprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["scheduled_date", "start_time"],
                "indexes": [
                    models.Index(
                        fields=["teacher", "scheduled_date"], name="scheduler_c_teacher_cee4ca_idx"
                    ),
                    models.Index(
                        fields=["student", "scheduled_date"], name="scheduler_c_student_9557cb_idx"
                    ),
                    models.Index(
                        fields=["school", "scheduled_date"], name="scheduler_c_school__7bc89b_idx"
                    ),
                    models.Index(
                        fields=["status", "scheduled_date"], name="scheduler_c_status_9613a0_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="TeacherAvailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "day_of_week",
                    models.CharField(
                        choices=[
                            ("monday", "Monday"),
                            ("tuesday", "Tuesday"),
                            ("wednesday", "Wednesday"),
                            ("thursday", "Thursday"),
                            ("friday", "Friday"),
                            ("saturday", "Saturday"),
                            ("sunday", "Sunday"),
                        ],
                        max_length=10,
                        verbose_name="day of week",
                    ),
                ),
                ("start_time", models.TimeField(verbose_name="start time")),
                ("end_time", models.TimeField(verbose_name="end time")),
                ("is_active", models.BooleanField(default=True, verbose_name="is active")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "school",
                    models.ForeignKey(
                        help_text="School context for this availability",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_availabilities",
                        to="accounts.school",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availabilities",
                        to="accounts.teacherprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["day_of_week", "start_time"],
                "unique_together": {("teacher", "school", "day_of_week", "start_time")},
            },
        ),
        migrations.CreateModel(
            name="TeacherUnavailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("start_time", models.TimeField(blank=True, null=True, verbose_name="start time")),
                ("end_time", models.TimeField(blank=True, null=True, verbose_name="end time")),
                ("reason", models.CharField(blank=True, max_length=255, verbose_name="reason")),
                ("is_all_day", models.BooleanField(default=False, verbose_name="all day")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "school",
                    models.ForeignKey(
                        help_text="School context for this unavailability",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_unavailabilities",
                        to="accounts.school",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="unavailabilities",
                        to="accounts.teacherprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["date", "start_time"],
                "unique_together": {("teacher", "school", "date", "start_time")},
            },
        ),
    ]
