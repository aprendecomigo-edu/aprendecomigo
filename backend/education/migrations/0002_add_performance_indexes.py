# Generated by Django

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('education', '0001_initial'),
    ]

    operations = [
        # Course model indexes
        migrations.RunSQL(
            "CREATE INDEX idx_course_teacher_status ON education_course (teacher_id, status);",
            reverse_sql="DROP INDEX idx_course_teacher_status;"
        ),
        migrations.RunSQL(
            "CREATE INDEX idx_course_subject_status ON education_course (subject_id, status);",
            reverse_sql="DROP INDEX idx_course_subject_status;"
        ),
        migrations.RunSQL(
            "CREATE INDEX idx_course_status_created ON education_course (status, created_at);",
            reverse_sql="DROP INDEX idx_course_status_created;"
        ),
        
        # Enrollment model indexes
        migrations.RunSQL(
            "CREATE INDEX idx_enrollment_student_active ON education_enrollment (student_id, is_active);",
            reverse_sql="DROP INDEX idx_enrollment_student_active;"
        ),
        migrations.RunSQL(
            "CREATE INDEX idx_enrollment_course_active ON education_enrollment (course_id, is_active);",
            reverse_sql="DROP INDEX idx_enrollment_course_active;"
        ),
        migrations.RunSQL(
            "CREATE INDEX idx_enrollment_status_date ON education_enrollment (status, enrollment_date);",
            reverse_sql="DROP INDEX idx_enrollment_status_date;"
        ),
        
        # Lesson model indexes  
        migrations.RunSQL(
            "CREATE INDEX idx_lesson_course_scheduled ON education_lesson (course_id, scheduled_date);",
            reverse_sql="DROP INDEX idx_lesson_course_scheduled;"
        ),
        migrations.RunSQL(
            "CREATE INDEX idx_lesson_status_scheduled ON education_lesson (status, scheduled_date);",
            reverse_sql="DROP INDEX idx_lesson_status_scheduled;"
        ),
        
        # Assignment model indexes
        migrations.RunSQL(
            "CREATE INDEX idx_assignment_course_active ON education_assignment (course_id, is_active);",
            reverse_sql="DROP INDEX idx_assignment_course_active;"
        ),
        migrations.RunSQL(
            "CREATE INDEX idx_assignment_due_active ON education_assignment (due_date, is_active);",
            reverse_sql="DROP INDEX idx_assignment_due_active;"
        ),
        
        # AssignmentSubmission model indexes
        migrations.RunSQL(
            "CREATE INDEX idx_submission_assignment_student ON education_assignmentsubmission (assignment_id, student_id);",
            reverse_sql="DROP INDEX idx_submission_assignment_student;"
        ),
        migrations.RunSQL(
            "CREATE INDEX idx_submission_graded_draft ON education_assignmentsubmission (graded_at, is_draft);",
            reverse_sql="DROP INDEX idx_submission_graded_draft;"
        ),
        
        # Payment model indexes
        migrations.RunSQL(
            "CREATE INDEX idx_payment_teacher_status ON education_payment (teacher_id, status);",
            reverse_sql="DROP INDEX idx_payment_teacher_status;"
        ),
        migrations.RunSQL(
            "CREATE INDEX idx_payment_student_status ON education_payment (student_id, status);",
            reverse_sql="DROP INDEX idx_payment_student_status;"
        ),
        migrations.RunSQL(
            "CREATE INDEX idx_payment_enrollment_status ON education_payment (enrollment_id, status);",
            reverse_sql="DROP INDEX idx_payment_enrollment_status;"
        ),
        migrations.RunSQL(
            "CREATE INDEX idx_payment_created_status ON education_payment (created_at, status);",
            reverse_sql="DROP INDEX idx_payment_created_status;"
        ),
        
        # Subject model indexes
        migrations.RunSQL(
            "CREATE INDEX idx_subject_active_name ON education_subject (is_active, name);",
            reverse_sql="DROP INDEX idx_subject_active_name;"
        ),
    ]