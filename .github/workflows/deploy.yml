name: Deploy

on:
  push:
    branches: [main, staging]
    paths:
      - '**/*.py'
      - 'requirements/**'
      - 'requirements.txt'
      - 'manage.py'
      - 'pyproject.toml'
      - '.github/workflows/deploy.yml'
  pull_request:
    branches: [main, staging]
    paths:
      - '**/*.py'
      - 'requirements/**'
      - 'requirements.txt'
      - 'manage.py'
      - 'pyproject.toml'
      - '.github/workflows/deploy.yml'

jobs:
  django-tests:
    name: Pre-Deploy Tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.13"]

    env:
      DJANGO_TESTING: true
      DJANGO_SETTINGS_MODULE: aprendecomigo.settings.development

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements/dev.txt

    - name: Check Django configuration
      run: |
        python manage.py check --settings=aprendecomigo.settings.development

    - name: Run database migrations
      run: |
        python manage.py migrate --settings=aprendecomigo.settings.development

    - name: Lint with ruff
      run: |
        ruff check . --output-format=github

    - name: Run Django tests
      run: |
        python manage.py test --exclude-tag=classroom --settings=aprendecomigo.settings.development --verbosity=2

  e2e-tests:
    name: E2E Critical Path Tests
    runs-on: ubuntu-latest
    needs: django-tests  # Only run E2E if unit tests pass

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.13"]

    env:
      DJANGO_TESTING: true
      DJANGO_SETTINGS_MODULE: aprendecomigo.settings.development

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements/dev.txt
        python -m pip install pytest-playwright

    - name: Install Playwright browsers
      run: |
        python -m playwright install chromium
        python -m playwright install-deps chromium

    - name: Run database migrations
      run: |
        python manage.py migrate --settings=aprendecomigo.settings.development

    - name: Start Django development server
      run: |
        python manage.py runserver 8000 &
        echo $! > django_server.pid
        # Wait for server to be ready
        timeout 30 bash -c 'until curl -s http://localhost:8000 > /dev/null 2>&1; do sleep 1; done'
        echo "âœ… Django server is ready"

    - name: Run E2E critical path tests
      run: |
        cd .e2e
        pytest tests/auth/test_school_admin_registration.py::TestSchoolAdminRegistration::test_phase_1_critical_path_registration -v --tb=short

    - name: Stop Django server
      if: always()
      run: |
        if [ -f django_server.pid ]; then
          kill $(cat django_server.pid) || true
          rm django_server.pid
        fi
