QA Test Case: Purchase History and Consumption Tracking

Test ID: DASHBOARD-003
Test Name: Purchase History and Consumption Tracking
Purpose: Verify purchase history display, real-time consumption tracking, package status monitoring, and usage analytics
Expected Result: Purchase history displays accurately with real-time consumption updates and detailed package usage tracking

=== CONTEXT (Pre-test Requirements) ===

System Information:
- Project: Aprende Comigo Educational Platform
- Architecture: Django REST Framework backend + React Native Expo frontend
- Database: PostgreSQL with comprehensive purchase and consumption data

Required Environment Setup:
1. Project Location: /Users/anapmc/Code/aprendecomigo/frontend-ui
2. Python Virtual Environment: .venv/ in project root
3. Start development servers: make dev-open
4. Backend: http://localhost:8000
5. Frontend: http://localhost:8081

Test Data:
- Test Student Email: student@test.com
- Package Types Required:
  - Active packages with remaining hours
  - Partially consumed packages
  - Fully consumed packages
  - Expired packages
  - Recently purchased packages
- Purchase History: Minimum 5 different package purchases
- Consumption Data: Various class bookings with hour deductions
- Date Range: Purchases spanning 6+ months

=== DETAILED STEP-BY-STEP INSTRUCTIONS ===

Step 1: Environment Setup and Authentication
Commands:
  cd /Users/anapmc/Code/aprendecomigo/frontend-ui
  source ../.venv/bin/activate
  make dev-open

1. Start development servers
2. Navigate to http://localhost:8081
3. Complete authentication with student@test.com
4. Verify successful login to dashboard

Expected: Authentication successful, dashboard accessible
Screenshot: 01-authenticated-dashboard.png
Debug: Use 'make logs' for troubleshooting

Step 2: Navigate to Purchase History
1. From dashboard, locate purchase history navigation
2. Click on "Purchase History" or "My Packages" menu item
3. Verify page loads with purchase history interface
4. Check page title and breadcrumb navigation
5. Verify loading states and data initialization

Expected: Purchase history page loads with package information
Screenshot: 02-purchase-history-page.png
PASS if: Page loads with purchase history interface visible
FAIL if: Navigation fails, page errors, or data doesn't load

Step 3: Purchase List Display Verification
1. Verify purchase list displays with essential columns:
   - Purchase Date
   - Package Name/Type
   - Hours Purchased
   - Hours Remaining
   - Hours Consumed
   - Purchase Amount
   - Package Status (Active/Expired/Consumed)
   - Expiration Date
2. Check date formatting consistency
3. Verify hour calculations are accurate
4. Check status indicators use appropriate colors/icons
5. Verify purchases are sorted chronologically

Expected: Purchase list displays comprehensive package information
Screenshot: 03-purchase-list-display.png
PASS if: All columns present with accurate data and proper formatting
FAIL if: Missing data, calculation errors, or poor presentation

Step 4: Active Package Status Monitoring
1. Identify active packages (not expired, hours remaining)
2. Verify active packages show:
   - Current hours remaining
   - Percentage consumed (visual indicator)
   - Days until expiration
   - Recent usage activity
3. Check visual indicators for package status:
   - Green for healthy packages (>50% remaining)
   - Yellow for moderate consumption (20-50% remaining)
   - Red for nearly depleted (<20% remaining)
4. Test sorting by different criteria (date, status, remaining hours)

Expected: Active packages clearly show current status with visual indicators
Screenshot: 04-active-package-status.png
PASS if: Status indicators accurate, visual cues appropriate
FAIL if: Incorrect status, poor visual indicators, or missing information

Step 5: Consumption Tracking Detail View
1. Click on an active package to view consumption details
2. Verify detailed consumption view shows:
   - Individual class sessions and hour deductions
   - Date and time of each consumption
   - Teacher and subject information
   - Hour amounts deducted per session
   - Running balance after each session
3. Check consumption history is chronological
4. Verify hour calculations match transaction records
5. Test navigation back to main purchase list

Expected: Detailed consumption tracking with accurate session records
Screenshot: 05-consumption-detail-view.png
PASS if: Complete consumption history with accurate hour tracking
FAIL if: Missing sessions, incorrect calculations, or navigation issues

Step 6: Real-time Consumption Updates
1. Note current hours remaining for an active package
2. Book a test class session (if booking functionality available)
3. After session booking, return to purchase history
4. Verify hours remaining updated immediately
5. Check that new consumption appears in detail view
6. Test browser refresh to ensure persistence

Expected: Real-time updates reflect consumption changes immediately
Screenshot: 06-realtime-updates.png
PASS if: Hours update immediately after consumption events
FAIL if: Updates delayed, incorrect calculations, or persistence issues

Step 7: Expired Package Management
1. Identify expired packages in the list
2. Verify expired packages show:
   - Clear "Expired" status indicator
   - Original purchase details
   - Total hours consumed vs purchased
   - Expiration date
   - Unused hours (if any)
3. Check that expired packages are visually distinct
4. Verify expired packages don't show as available for booking
5. Test filtering to show only active vs expired packages

Expected: Expired packages clearly identified with complete usage summary
Screenshot: 07-expired-packages.png
PASS if: Expired packages properly marked with usage summary
FAIL if: Status unclear, missing expiration info, or visual confusion

Step 8: Package Usage Analytics
1. Look for usage analytics or summary section
2. Verify analytics show:
   - Total packages purchased
   - Total hours purchased vs consumed
   - Average hours per package
   - Most active subjects/teachers
   - Usage patterns over time
3. Check visual charts or graphs (if available)
4. Test different time period filters for analytics
5. Verify data accuracy against individual packages

Expected: Usage analytics provide meaningful insights into consumption patterns
Screenshot: 08-usage-analytics.png
PASS if: Analytics accurate and provide useful consumption insights
FAIL if: Analytics missing, inaccurate, or not meaningful

Step 9: Package Purchase Integration
1. Look for "Purchase New Package" or similar action
2. Test navigation to package purchase flow
3. Verify purchase options display available packages
4. Test package selection and pricing display
5. Check that purchase flow integrates with existing history
6. Test canceling purchase and returning to history

Expected: Seamless integration between viewing history and purchasing new packages
Screenshot: 09-purchase-integration.png
PASS if: Purchase flow accessible and integrates well
FAIL if: Purchase flow broken, poor integration, or navigation issues

Step 10: Search and Filtering Capabilities
1. Test searching purchases by:
   - Package name
   - Purchase date
   - Teacher name
   - Subject area
2. Test filtering by:
   - Package status (active/expired/consumed)
   - Date ranges
   - Hours remaining thresholds
3. Verify search results update correctly
4. Test combining search with filters
5. Check search persistence and clearing

Expected: Search and filtering help users find specific packages easily
Screenshot: 10-search-filtering.png
PASS if: Search and filters work correctly with accurate results
FAIL if: Search broken, filters don't work, or results inaccurate

Step 11: Export and Reporting
1. Look for export functionality for purchase history
2. Test exporting purchase data (PDF, CSV, Excel)
3. Verify exported data includes:
   - Complete purchase details
   - Consumption tracking data
   - Current status information
4. Test export with filters applied
5. Check exported file formatting and completeness
6. Test printing purchase history (if available)

Expected: Export functionality provides comprehensive purchase data
Screenshot: 11-export-reporting.png
PASS if: Export works correctly with complete, well-formatted data
FAIL if: Export fails, incomplete data, or poor formatting

Step 12: Mobile Responsiveness and Touch Interface
1. Test purchase history on mobile viewport (375px width)
2. Verify package cards or table adapts to mobile
3. Test consumption detail view on mobile
4. Check touch interactions for expanding package details
5. Verify all functionality accessible on touch devices
6. Test mobile-specific gestures (swipe, pinch, etc.)

Expected: Full functionality maintained with mobile-optimized interface
Screenshot: 12-mobile-interface.png
PASS if: Mobile interface fully functional with good user experience
FAIL if: Mobile interface broken, inaccessible features, or poor usability

Step 13: Error Handling and Edge Cases
1. Test behavior with no purchase history
2. Test with packages that have zero remaining hours
3. Verify handling of negative hour balances (if possible)
4. Test with very old purchase dates
5. Check behavior with network connectivity issues
6. Test concurrent access scenarios
7. Verify graceful handling of invalid package data

Expected: Robust error handling with appropriate user feedback
Screenshot: 13-error-handling.png
PASS if: All edge cases handled gracefully with clear messaging
FAIL if: Poor error handling, crashes, or confusing user experience

=== PASS/FAIL CRITERIA ===

PASS: Purchase history displays accurately, consumption tracking works in real-time, package statuses are clear, analytics provide insights, and mobile interface is fully functional

FAIL: Any critical functionality fails, consumption tracking inaccurate, package status unclear, or poor mobile experience

Individual Step Criteria:
- Step 1: PASS if authentication successful, FAIL if login issues
- Step 2: PASS if purchase history page loads, FAIL if navigation fails
- Step 3: PASS if purchase list complete and accurate, FAIL if missing data
- Step 4: PASS if active package status clear, FAIL if status indicators poor
- Step 5: PASS if consumption details complete, FAIL if tracking incomplete
- Step 6: PASS if real-time updates work, FAIL if updates delayed or incorrect
- Step 7: PASS if expired packages handled properly, FAIL if status unclear
- Step 8: PASS if analytics accurate and useful, FAIL if analytics missing/wrong
- Step 9: PASS if purchase integration smooth, FAIL if integration broken
- Step 10: PASS if search/filtering works, FAIL if search functionality poor
- Step 11: PASS if export complete and accurate, FAIL if export fails
- Step 12: PASS if mobile interface fully functional, FAIL if mobile experience poor
- Step 13: PASS if error handling appropriate, FAIL if poor error management

Overall Result: PASS only if ALL steps pass, FAIL if ANY step fails