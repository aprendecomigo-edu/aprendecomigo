Test Case: Scheduler Functionality with Role-Based Permissions

Test ID: scheduler-001
Test Name: Schedule Class with Different User Roles
Test Description: Verify that the scheduler works correctly with role-based permissions

Test Steps:
1. Login as teacher user
2. Navigate to calendar/schedule screen
3. Verify that "Book Class" button is NOT visible (teachers cannot schedule)
4. Verify that existing classes are displayed in calendar
5. Try to access booking page directly via URL
6. Verify access is denied or redirected

7. Login as student user
8. Navigate to calendar/schedule screen
9. Verify that "Book Class" button IS visible (students can schedule)
10. Click "Book Class" button
11. Select a teacher from the dropdown
12. Select a date for the class
13. Verify available time slots are loaded correctly
14. Select a time slot
15. Fill in class details (duration, description)
16. Verify that student can only book for themselves
17. Submit the booking
18. Verify success message and redirect to calendar
19. Verify new class appears in calendar

20. Login as admin user
21. Navigate to calendar/schedule screen
22. Verify that "Book Class" button IS visible (admins can schedule)
23. Click "Book Class" button
24. Verify that admin can select any student (not just themselves)
25. Complete booking process
26. Verify all scheduled classes are visible to admin
27. Test class management actions (confirm, complete, cancel)

Expected Results:
- Teachers cannot schedule classes (no Book Class button)
- Students can schedule classes only for themselves
- Admins can schedule classes for any student
- All users can view their respective classes
- Role-based permissions are properly enforced
- Calendar displays classes correctly in both list and week view
- Class detail view shows proper actions based on user role

Test Data:
- Teacher account: teacher@test.com
- Student account: student@test.com
- Admin account: admin@test.com
- Test passwords: password123

Browser Coverage:
- Chrome
- Firefox
- Safari
- Mobile Chrome
- Mobile Safari

Test Environment:
- Frontend: http://localhost:3000
- Backend: http://localhost:8000
- Database: Test database with sample users and classes
