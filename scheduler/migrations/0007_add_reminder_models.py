# Generated by Django 5.1.11 on 2025-08-08 02:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0007_add_reminder_models'),
        ('scheduler', '0006_remove_recurringclassschedule_student_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('confirmation', 'Confirmation'), ('reminder_24h', '24 Hours Before'), ('reminder_1h', '1 Hour Before'), ('reminder_15min', '15 Minutes Before'), ('cancellation', 'Cancellation'), ('change', 'Schedule Change'), ('custom', 'Custom')], max_length=20, verbose_name='reminder type')),
                ('recipient_type', models.CharField(choices=[('teacher', 'Teacher'), ('student', 'Student'), ('parent', 'Parent'), ('admin', 'Admin')], help_text='Role of the recipient in the class context', max_length=20, verbose_name='recipient type')),
                ('communication_channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'In-App Notification')], help_text='Channel used to send this reminder', max_length=20, verbose_name='communication channel')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='status')),
                ('scheduled_for', models.DateTimeField(help_text='When this reminder should be sent (UTC)', verbose_name='scheduled for')),
                ('sent_at', models.DateTimeField(blank=True, help_text='When this reminder was actually sent', null=True, verbose_name='sent at')),
                ('subject', models.CharField(blank=True, help_text='Email subject or notification title', max_length=255, verbose_name='subject')),
                ('message', models.TextField(blank=True, help_text='Reminder message content', verbose_name='message')),
                ('error_message', models.TextField(blank=True, help_text='Error message if sending failed', verbose_name='error message')),
                ('retry_count', models.PositiveIntegerField(default=0, help_text='Number of times sending was retried', verbose_name='retry count')),
                ('max_retries', models.PositiveIntegerField(default=3, help_text='Maximum number of retry attempts', verbose_name='max retries')),
                ('external_message_id', models.CharField(blank=True, help_text='ID from external communication service', max_length=255, verbose_name='external message ID')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional data for the reminder', verbose_name='metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='scheduler.classschedule')),
                ('recipient', models.ForeignKey(help_text='User who will receive this reminder', on_delete=django.db.models.deletion.CASCADE, related_name='received_reminders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['scheduled_for', 'created_at'],
                'indexes': [models.Index(fields=['class_schedule', 'reminder_type'], name='scheduler_c_class_s_8ccb07_idx'), models.Index(fields=['recipient', 'status'], name='scheduler_c_recipie_51a6e1_idx'), models.Index(fields=['status', 'scheduled_for'], name='scheduler_c_status_84b883_idx'), models.Index(fields=['communication_channel', 'status'], name='scheduler_c_communi_a5eb99_idx')],
            },
        ),
        migrations.CreateModel(
            name='ReminderPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_timing_hours', models.JSONField(default=list, help_text='List of hours before class to send reminders (e.g., [24, 2, 0.5])', verbose_name='reminder timing hours')),
                ('communication_channels', models.JSONField(default=list, help_text='List of preferred communication channels', verbose_name='communication channels')),
                ('timezone_preference', models.CharField(blank=True, help_text="User's preferred timezone (e.g., 'America/New_York')", max_length=50, null=True, verbose_name='timezone preference')),
                ('is_active', models.BooleanField(default=True, help_text='Whether reminders are enabled for this user', verbose_name='is active')),
                ('is_school_default', models.BooleanField(default=False, help_text='Whether this is the default preference template for the school', verbose_name='is school default')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(blank=True, help_text='School-specific preferences (null for global preferences)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reminder_preferences', to='accounts.school')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminder_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user', 'school'],
                'indexes': [models.Index(fields=['user', 'is_active'], name='scheduler_r_user_id_db210f_idx'), models.Index(fields=['school', 'is_school_default'], name='scheduler_r_school__8d8371_idx')],
                'unique_together': {('user', 'school')},
            },
        ),
    ]
