# Generated by Django 5.2.5 on 2025-09-12 11:47

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        ("finances", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="schoolactivity",
            name="target_class",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="finances.classsession",
            ),
        ),
        migrations.AddField(
            model_name="schoolactivity",
            name="target_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="activities_targeted",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="schoolinvitation",
            name="invited_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sent_invitations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="schoolinvitation",
            name="school",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="invitations",
                to="accounts.school",
            ),
        ),
        migrations.AddField(
            model_name="schoolactivity",
            name="target_invitation",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="accounts.schoolinvitation",
            ),
        ),
        migrations.AddField(
            model_name="schoolinvitationlink",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_invitation_links",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="schoolinvitationlink",
            name="school",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="invitation_links",
                to="accounts.school",
            ),
        ),
        migrations.AddField(
            model_name="schoolmembership",
            name="school",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="memberships",
                to="accounts.school",
            ),
        ),
        migrations.AddField(
            model_name="schoolmembership",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="school_memberships",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="schoolsettings",
            name="educational_system",
            field=models.ForeignKey(
                default=1,
                help_text="Educational system used by this school",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="schools_using_system",
                to="accounts.educationalsystem",
                verbose_name="educational system",
            ),
        ),
        migrations.AddField(
            model_name="schoolsettings",
            name="school",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="settings",
                to="accounts.school",
            ),
        ),
        migrations.AddField(
            model_name="studentpermission",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="student_permissions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="studentprofile",
            name="educational_system",
            field=models.ForeignKey(
                default=1,
                help_text="Educational system this student belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="students",
                to="accounts.educationalsystem",
            ),
        ),
        migrations.AddField(
            model_name="studentprofile",
            name="guardian",
            field=models.ForeignKey(
                blank=True,
                help_text="Guardian of the student (required for guardian-managed accounts)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="students",
                to="accounts.guardianprofile",
            ),
        ),
        migrations.AddField(
            model_name="studentprofile",
            name="user",
            field=models.OneToOneField(
                blank=True,
                help_text="User account for this student (null if guardian-only management)",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="student_profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="studentpermission",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="permissions",
                to="accounts.studentprofile",
            ),
        ),
        migrations.AddField(
            model_name="teachercourse",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="course_teachers",
                to="accounts.course",
            ),
        ),
        migrations.AddField(
            model_name="teacherinvitation",
            name="invited_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sent_teacher_invitations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="teacherinvitation",
            name="school",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="teacher_invitations",
                to="accounts.school",
            ),
        ),
        migrations.AddField(
            model_name="teacherprofile",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="teacher_profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="teachercourse",
            name="teacher",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="teacher_courses",
                to="accounts.teacherprofile",
            ),
        ),
        migrations.AddIndex(
            model_name="verificationcode",
            index=models.Index(
                fields=["email", "is_used"], name="accounts_ve_email_7e3f97_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="verificationcode",
            index=models.Index(
                fields=["email", "created_at"], name="accounts_ve_email_87ad10_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customuser",
            index=models.Index(fields=["email"], name="accounts_cu_email_5ce40b_idx"),
        ),
        migrations.AddIndex(
            model_name="customuser",
            index=models.Index(fields=["name"], name="accounts_cu_name_eeb412_idx"),
        ),
        migrations.AddIndex(
            model_name="customuser",
            index=models.Index(
                fields=["email_verified"], name="accounts_cu_email_v_dd12f9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customuser",
            index=models.Index(
                fields=["phone_verified"], name="accounts_cu_phone_v_d0c099_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customuser",
            index=models.Index(
                fields=["verification_required_after"],
                name="accounts_cu_verific_af0667_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="customuser",
            index=models.Index(
                fields=["onboarding_completed"], name="accounts_cu_onboard_9c7ab7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customuser",
            index=models.Index(
                fields=["date_joined"], name="accounts_cu_date_jo_fcefff_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["educational_system", "education_level"],
                name="accounts_co_educati_658084_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(fields=["code"], name="accounts_co_code_781c9a_idx"),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(fields=["name"], name="accounts_co_name_672730_idx"),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["created_at"], name="accounts_co_created_12114c_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="course",
            unique_together={("code", "educational_system")},
        ),
        migrations.AddIndex(
            model_name="guardianprofile",
            index=models.Index(
                fields=["created_at"], name="accounts_gu_created_68ee24_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="guardianprofile",
            index=models.Index(
                fields=["email_notifications_enabled"],
                name="accounts_gu_email_n_81ed15_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="guardianstudentrelationship",
            index=models.Index(
                fields=["guardian", "is_active"], name="accounts_gu_guardia_87e86d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="guardianstudentrelationship",
            index=models.Index(
                fields=["student", "is_active"], name="accounts_gu_student_ed0586_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="guardianstudentrelationship",
            index=models.Index(
                fields=["school", "is_active"], name="accounts_gu_school__48d380_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="guardianstudentrelationship",
            constraint=models.CheckConstraint(
                condition=models.Q(("guardian", models.F("student")), _negated=True),
                name="guardian_cannot_be_student",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="guardianstudentrelationship",
            unique_together={("guardian", "student", "school")},
        ),
        migrations.AddIndex(
            model_name="schoolinvitation",
            index=models.Index(
                fields=["school", "is_accepted", "-created_at"],
                name="accounts_sc_school__e69785_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="schoolinvitation",
            index=models.Index(
                fields=["email", "is_accepted"], name="accounts_sc_email_a86abc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="schoolinvitation",
            index=models.Index(fields=["token"], name="accounts_sc_token_8b9ac6_idx"),
        ),
        migrations.AddIndex(
            model_name="schoolinvitation",
            index=models.Index(
                fields=["expires_at", "is_accepted"],
                name="accounts_sc_expires_9f288a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="schoolactivity",
            index=models.Index(
                fields=["school", "-timestamp"], name="accounts_sc_school__0e0c1a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="schoolactivity",
            index=models.Index(
                fields=["school", "activity_type", "-timestamp"],
                name="accounts_sc_school__727125_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="schoolactivity",
            index=models.Index(
                fields=["actor", "-timestamp"], name="accounts_sc_actor_i_04515d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="schoolinvitationlink",
            index=models.Index(
                fields=["school", "role", "is_active"],
                name="accounts_sc_school__537214_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="schoolinvitationlink",
            index=models.Index(fields=["token"], name="accounts_sc_token_b61623_idx"),
        ),
        migrations.AddIndex(
            model_name="schoolinvitationlink",
            index=models.Index(
                fields=["expires_at", "is_active"],
                name="accounts_sc_expires_645a11_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="schoolinvitationlink",
            index=models.Index(
                fields=["created_by", "-created_at"],
                name="accounts_sc_created_fb05ac_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="schoolinvitationlink",
            unique_together={("school", "role")},
        ),
        migrations.AddIndex(
            model_name="schoolmembership",
            index=models.Index(
                fields=["school", "role", "is_active"],
                name="accounts_sc_school__05ee6d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="schoolmembership",
            index=models.Index(
                fields=["school", "joined_at"], name="accounts_sc_school__f1da9a_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="schoolmembership",
            unique_together={("user", "school", "role")},
        ),
        migrations.AddIndex(
            model_name="schoolsettings",
            index=models.Index(
                fields=["school"], name="accounts_sc_school__c9d7fb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="schoolsettings",
            index=models.Index(
                fields=["educational_system"], name="accounts_sc_educati_795fdd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="schoolsettings",
            index=models.Index(
                fields=["language"], name="accounts_sc_languag_48f62c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="schoolsettings",
            index=models.Index(
                fields=["timezone"], name="accounts_sc_timezon_5b4855_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="studentprofile",
            index=models.Index(fields=["user"], name="accounts_st_user_id_3ee8f4_idx"),
        ),
        migrations.AddIndex(
            model_name="studentprofile",
            index=models.Index(
                fields=["educational_system", "school_year"],
                name="accounts_st_educati_049729_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="studentprofile",
            index=models.Index(
                fields=["birth_date"], name="accounts_st_birth_d_b0f49b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="studentpermission",
            index=models.Index(
                fields=["student", "user"], name="accounts_st_student_a971e2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="studentpermission",
            index=models.Index(
                fields=["expires_at"], name="accounts_st_expires_0c91ef_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="studentpermission",
            unique_together={("student", "user")},
        ),
        migrations.AddIndex(
            model_name="teacherinvitation",
            index=models.Index(
                fields=["school", "status", "-created_at"],
                name="accounts_te_school__92f957_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="teacherinvitation",
            index=models.Index(
                fields=["batch_id", "-created_at"],
                name="accounts_te_batch_i_206901_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="teacherinvitation",
            index=models.Index(
                fields=["email", "school", "is_accepted"],
                name="accounts_te_email_1bae7a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="teacherinvitation",
            index=models.Index(fields=["token"], name="accounts_te_token_7c3b8f_idx"),
        ),
        migrations.AddIndex(
            model_name="teacherinvitation",
            index=models.Index(
                fields=["expires_at", "is_accepted"],
                name="accounts_te_expires_445f20_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="teacherinvitation",
            index=models.Index(
                fields=["email_delivery_status", "retry_count"],
                name="accounts_te_email_d_35fa71_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="teacherinvitation",
            constraint=models.UniqueConstraint(
                condition=models.Q(
                    (
                        "expires_at__gt",
                        datetime.datetime(
                            2025,
                            9,
                            12,
                            11,
                            47,
                            30,
                            476511,
                            tzinfo=datetime.timezone.utc,
                        ),
                    ),
                    ("is_accepted", False),
                    ("status__in", ["pending", "sent", "delivered", "viewed"]),
                ),
                fields=("email", "school"),
                name="unique_active_teacher_invitation_per_school",
            ),
        ),
        migrations.AddIndex(
            model_name="teacherprofile",
            index=models.Index(
                fields=["last_profile_update"], name="accounts_te_last_pr_e9feb6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="teacherprofile",
            index=models.Index(
                fields=["last_activity"], name="accounts_te_last_ac_156d12_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="teacherprofile",
            index=models.Index(
                fields=["specialty"], name="accounts_te_special_67ff46_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="teacherprofile",
            index=models.Index(
                fields=["hourly_rate"], name="accounts_te_hourly__9a19a0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="teachercourse",
            index=models.Index(
                fields=["hourly_rate"], name="accounts_te_hourly__c3061c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="teachercourse",
            index=models.Index(
                fields=["is_active", "hourly_rate"],
                name="accounts_te_is_acti_8eb952_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="teachercourse",
            index=models.Index(
                fields=["course", "is_active"], name="accounts_te_course__42098d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="teachercourse",
            index=models.Index(
                fields=["teacher", "is_active"], name="accounts_te_teacher_f9bf5e_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="teachercourse",
            unique_together={("teacher", "course")},
        ),
    ]
